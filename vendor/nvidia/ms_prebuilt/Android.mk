# Generated by release script
LOCAL_PATH := $(call my-dir)

define include-nvprebuilt
include $$(CLEAR_VARS)
LOCAL_IS_HOST_MODULE := $(4)
LOCAL_SRC_FILES := $(1)/$(2)
LOCAL_MODULE_CLASS := $(3)
LOCAL_REQUIRED_MODULES := $(5)
ifeq ($(6),)
LOCAL_MODULE_TAGS := optional
else
LOCAL_MODULE_TAGS := $(6)
endif
LOCAL_CERTIFICATE := PRESIGNED
ifeq ($(3),SHARED_LIBRARIES)
ifneq (./,$(dir $(2)))
OVERRIDE_BUILT_MODULE_PATH := $$(TARGET_OUT_INTERMEDIATE_LIBRARIES)/$(dir $(2))
LOCAL_MODULE_PATH := $$(TARGET_OUT_SHARED_LIBRARIES)/$(dir $(2))
else
OVERRIDE_BUILT_MODULE_PATH := $$(TARGET_OUT_INTERMEDIATE_LIBRARIES)
endif
endif
ifeq ($(3),BOOT_BIN)
LOCAL_MODULE_PATH := $$(PRODUCT_OUT)
endif
ifeq ($(3),ETC)
LOCAL_MODULE := $(2)
LOCAL_MODULE_PATH := $$(TARGET_OUT_ETC)/firmware
else
LOCAL_MODULE := $(notdir $(basename $(2)))
LOCAL_MODULE_SUFFIX := $(suffix $(2))
endif
# handle static java libraries, static .jars are copied to
# 'lib' folder while dynamic .jars are copied to 'framework'
ifeq ($(3)/$(notdir $(1)),JAVA_LIBRARIES/lib)
LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := $(basename $(2)):$(1)/$(2)
include $$(BUILD_MULTI_PREBUILT)
else
include $$(BUILD_PREBUILT)
endif
endef

define add-nvprebuilt-binary
    $(eval $(include-nvprebuilt))
endef

# nvidl cannot be copied as part of regular prebuilts, because
# acp is used to do the copying, acp depends on all_copied_headers,
# which depends on nvidl.  Use a separate target for nvidl.
# TODO: Replace with a proper target and copy-file-to-target-with-cp.
define add-nvprebuilt-nvidl
    $(shell mkdir -p $(HOST_OUT_EXECUTABLES) && cp -fp $(TOP)/vendor/nvidia/tegra/prebuilt/$(TARGET_PRODUCT)/$(1)/$(2) $(HOST_OUT_EXECUTABLES)/nvidl)
endef

define include-nvheader
include $$(CLEAR_VARS)
LOCAL_COPY_HEADERS := $(1)/$(2)
include $$(BUILD_COPY_HEADERS)
endef

define add-nvprebuilt-header
    $(eval $(include-nvheader))
endef

# Detect build type
ifneq ($(wildcard $(TOP)/vendor/nvidia/tegra/camera/core/Android.mk),)
_cust_build_type := camera
else
_cust_build_type := standard
endif

$(call add-nvprebuilt-binary,target/product/kai/etc/firmware,nvavp_vid_ucode.bin,ETC,,,optional)
$(call add-nvprebuilt-binary,target/product/kai/lib,libnvmm_vc1_video.so,SHARED_LIBRARIES,,libnvmm_utils libnvos libm libc libnvrm libstdc++ libnvrm_graphics libnvddk_2d,optional)
$(call add-nvprebuilt-binary,target/product/kai/lib,libnvmmlite_msaudio.so,SHARED_LIBRARIES,,libnvmmlite_utils libnvmm_utils libnvos libm libc libnvrm libstdc++ libnvrm_graphics libnvmmlite,optional)
$(call add-nvprebuilt-binary,target/product/kai/lib,libnvmm_asfparser.so,SHARED_LIBRARIES,,libnvmm_utils libnvos libm libc libnvrm libstdc++ libnvmm_contentpipe libnvmm,optional)
$(call add-nvprebuilt-binary,target/product/kai/lib,libnvmm_msaudio.so,SHARED_LIBRARIES,,libnvmm_utils libnvos libm libc libnvrm libstdc++ libnvrm_graphics libnvmm,optional)
ifneq ($(_cust_build_type),camera)
$(call add-nvprebuilt-binary,target/product/kai/lib,libnvmm_aviparser.so,SHARED_LIBRARIES,,libnvmm_utils libnvos libm libc libnvrm libstdc++ libnvmm_contentpipe libnvmm,optional)
endif
# Clear local variable
_cust_build_type :=

