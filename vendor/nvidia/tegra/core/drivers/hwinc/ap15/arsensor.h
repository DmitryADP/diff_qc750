//
// DO NOT EDIT - generated by simspec!
//

#ifndef ___ARSENSOR_H_INC_
#define ___ARSENSOR_H_INC_
// --------------------------------------------------------------------------
// 
// Copyright (c) 2004, NVIDIA Corp.
// All Rights Reserved.
// 
// This is UNPUBLISHED PROPRIETARY SOURCE CODE of NVIDIA Corp.;
// the contents of this file may not be disclosed to third parties, copied or
// duplicated in any form, in whole or in part, without the prior written
// permission of NVIDIA Corp.
// 
// RESTRICTED RIGHTS LEGEND 
// Use, duplication or disclosure by the Government is subject to restrictions
// as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
// and Computer Software clause at DFARS 252.227-7013, and/or in similar or
// successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
// rights reserved under the Copyright Laws of the United States.
// 
#define FAKE_SENSOR_LIMIT       1392513023

// Register FAKE_SENSOR_ENABLE_0  
#define FAKE_SENSOR_ENABLE_0                    _MK_ADDR_CONST(0x53000000)
#define FAKE_SENSOR_ENABLE_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_ENABLE_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_0_RESET_MASK                         _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ENABLE_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_0_READ_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ENABLE_0_WRITE_MASK                         _MK_MASK_CONST(0x1)
// enable sensor 
#define FAKE_SENSOR_ENABLE_0_ENABLE_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_ENABLE_0_ENABLE_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ENABLE_0_ENABLE_SHIFT)
#define FAKE_SENSOR_ENABLE_0_ENABLE_RANGE                       0:0
#define FAKE_SENSOR_ENABLE_0_ENABLE_WOFFSET                     0x0
#define FAKE_SENSOR_ENABLE_0_ENABLE_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_0_ENABLE_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ENABLE_0_ENABLE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_0_ENABLE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_VSYNC_PULSE_0  
#define FAKE_SENSOR_VSYNC_PULSE_0                       _MK_ADDR_CONST(0x53000004)
#define FAKE_SENSOR_VSYNC_PULSE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_VSYNC_PULSE_0_RESET_VAL                     _MK_MASK_CONST(0xa)
#define FAKE_SENSOR_VSYNC_PULSE_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_VSYNC_PULSE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VSYNC_PULSE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VSYNC_PULSE_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_VSYNC_PULSE_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
// the pulse width of vsync, unit: clock
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_SHIFT)
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_RANGE                   31:0
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_WOFFSET                 0x0
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_DEFAULT                 _MK_MASK_CONST(0xa)
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VSYNC_PULSE_0_WIDTH_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_HSYNC_PULSE_0  
#define FAKE_SENSOR_HSYNC_PULSE_0                       _MK_ADDR_CONST(0x53000008)
#define FAKE_SENSOR_HSYNC_PULSE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_HSYNC_PULSE_0_RESET_VAL                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_HSYNC_PULSE_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HSYNC_PULSE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_PULSE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_PULSE_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HSYNC_PULSE_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
// the pulse width of hsync, unit: clock
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_SHIFT)
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_RANGE                   31:0
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_WOFFSET                 0x0
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_DEFAULT                 _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_PULSE_0_WIDTH_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_LINE_STRIDE_0  
#define FAKE_SENSOR_LINE_STRIDE_0                       _MK_ADDR_CONST(0x5300000c)
#define FAKE_SENSOR_LINE_STRIDE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_LINE_STRIDE_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_LINE_STRIDE_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_LINE_STRIDE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_LINE_STRIDE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_LINE_STRIDE_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_LINE_STRIDE_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
// the distance between two rising edge of hsync, 
// unit: clock
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_FIELD                  (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_LINE_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_RANGE                  31:0
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_WOFFSET                        0x0
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_DEFAULT_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_LINE_STRIDE_0_STRIDE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_FRAME_STRIDE_0  
#define FAKE_SENSOR_FRAME_STRIDE_0                      _MK_ADDR_CONST(0x53000010)
#define FAKE_SENSOR_FRAME_STRIDE_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_FRAME_STRIDE_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_FRAME_STRIDE_0_RESET_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_FRAME_STRIDE_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_FRAME_STRIDE_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_FRAME_STRIDE_0_READ_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_FRAME_STRIDE_0_WRITE_MASK                   _MK_MASK_CONST(0xffffffff)
// the distance between two rising edge of vsync, 
// unit: lines
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_FIELD                 (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_RANGE                 31:0
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_WOFFSET                       0x0
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_DEFAULT_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_FRAME_STRIDE_0_STRIDE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_DATAOUT_LINE_START_0  
#define FAKE_SENSOR_DATAOUT_LINE_START_0                        _MK_ADDR_CONST(0x53000014)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_DATAOUT_LINE_START_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// number of clock cycles from rising of hsync to 
// the first data out
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_DATAOUT_LINE_START_0_START_SHIFT)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_RANGE                    31:0
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_WOFFSET                  0x0
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_START_0_START_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_DATAOUT_FRAME_START_0  
#define FAKE_SENSOR_DATAOUT_FRAME_START_0                       _MK_ADDR_CONST(0x53000018)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
// number of lines from rising of vsync to first 
// "valid" hsync
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_DATAOUT_FRAME_START_0_START_SHIFT)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_RANGE                   31:0
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_WOFFSET                 0x0
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_START_0_START_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_DATAOUT_LINE_WIDTH_0  
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0                        _MK_ADDR_CONST(0x5300001c)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// number of clock cycles that output data is valid
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_SHIFT)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_RANGE                    31:0
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_WOFFSET                  0x0
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_LINE_WIDTH_0_WIDTH_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0  
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0                      _MK_ADDR_CONST(0x53000020)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_READ_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_WRITE_MASK                   _MK_MASK_CONST(0xffffffff)
// number of lines that output data is valid
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_FIELD                 (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_RANGE                 31:0
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_WOFFSET                       0x0
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0_HEIGHT_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_IMAGE_LINE_0  
#define FAKE_SENSOR_IMAGE_LINE_0                        _MK_ADDR_CONST(0x53000024)
#define FAKE_SENSOR_IMAGE_LINE_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_IMAGE_LINE_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_LINE_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_LINE_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_LINE_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_LINE_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_IMAGE_LINE_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_IMAGE_LINE_0_START_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_IMAGE_LINE_0_START_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_IMAGE_LINE_0_START_SHIFT)
#define FAKE_SENSOR_IMAGE_LINE_0_START_RANGE                    31:0
#define FAKE_SENSOR_IMAGE_LINE_0_START_WOFFSET                  0x0
#define FAKE_SENSOR_IMAGE_LINE_0_START_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_LINE_0_START_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_LINE_0_START_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_LINE_0_START_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_IMAGE_FRAME_0  
#define FAKE_SENSOR_IMAGE_FRAME_0                       _MK_ADDR_CONST(0x53000028)
#define FAKE_SENSOR_IMAGE_FRAME_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_IMAGE_FRAME_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_FRAME_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_IMAGE_FRAME_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_FRAME_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_FRAME_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_IMAGE_FRAME_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_IMAGE_FRAME_0_START_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_IMAGE_FRAME_0_START_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_IMAGE_FRAME_0_START_SHIFT)
#define FAKE_SENSOR_IMAGE_FRAME_0_START_RANGE                   31:0
#define FAKE_SENSOR_IMAGE_FRAME_0_START_WOFFSET                 0x0
#define FAKE_SENSOR_IMAGE_FRAME_0_START_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_FRAME_0_START_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_IMAGE_FRAME_0_START_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_IMAGE_FRAME_0_START_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_DATA_SOURCE_0  
#define FAKE_SENSOR_DATA_SOURCE_0                       _MK_ADDR_CONST(0x5300002c)
#define FAKE_SENSOR_DATA_SOURCE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_DATA_SOURCE_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_SOURCE_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_SOURCE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_SOURCE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_SOURCE_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_SOURCE_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
// 0, file name from command line option, data stream 
// from file
// 1, data stream from IF2SENSOR
// 2, file name from IF2SENSOR, data stream from file
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_FIELD                  (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_DATA_SOURCE_0_SOURCE_SHIFT)
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_RANGE                  31:0
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_WOFFSET                        0x0
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_DEFAULT_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_SOURCE_0_SOURCE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_DATA_FORMAT_0  // specifies the output format
#define FAKE_SENSOR_DATA_FORMAT_0                       _MK_ADDR_CONST(0x53000030)
#define FAKE_SENSOR_DATA_FORMAT_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_DATA_FORMAT_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_FORMAT_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_FORMAT_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_FORMAT_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_FORMAT_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_FORMAT_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_FIELD                  (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_DATA_FORMAT_0_FORMAT_SHIFT)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_RANGE                  31:0
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_WOFFSET                        0x0
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_DEFAULT_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_BAYER_12                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_BAYER_8                        _MK_ENUM_CONST(1)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_JPEG_A                 _MK_ENUM_CONST(2)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_JPEG_B                 _MK_ENUM_CONST(3)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_JPEG_C                 _MK_ENUM_CONST(4)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YUYV_422                       _MK_ENUM_CONST(5)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_UYVY_422                       _MK_ENUM_CONST(6)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YVYU_422                       _MK_ENUM_CONST(7)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_VYUY_422                       _MK_ENUM_CONST(8)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YUV_422_10                     _MK_ENUM_CONST(9)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YUV_420P                       _MK_ENUM_CONST(10)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YUV_420_10                     _MK_ENUM_CONST(11)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YUV_420_L                      _MK_ENUM_CONST(12)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_8                 _MK_ENUM_CONST(13)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_10                        _MK_ENUM_CONST(14)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_RGB_444                        _MK_ENUM_CONST(15)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_RGB_555                        _MK_ENUM_CONST(16)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_RGB_565                        _MK_ENUM_CONST(17)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_RGB_666                        _MK_ENUM_CONST(18)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_RGB_888                        _MK_ENUM_CONST(19)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_BAYER_6                        _MK_ENUM_CONST(20)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_BAYER_7                        _MK_ENUM_CONST(21)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_BAYER_10                       _MK_ENUM_CONST(22)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_BAYER_14                       _MK_ENUM_CONST(23)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_CCIR_656                       _MK_ENUM_CONST(24)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_JPEG_D                 _MK_ENUM_CONST(25)
#define FAKE_SENSOR_DATA_FORMAT_0_FORMAT_PATTERN_D_ISDBT                        _MK_ENUM_CONST(26)


// Ram FAKE_SENSOR_DATA_IN_0  // 32 bit data
#define FAKE_SENSOR_DATA_IN_0                   _MK_ADDR_CONST(0x53000034)
#define FAKE_SENSOR_DATA_IN_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_DATA_IN_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_READ_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_WRITE_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_DATA_IN_0_DATA_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATA_IN_0_DATA_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_DATA_IN_0_DATA_SHIFT)
#define FAKE_SENSOR_DATA_IN_0_DATA_RANGE                        31:0
#define FAKE_SENSOR_DATA_IN_0_DATA_WOFFSET                      0x0
#define FAKE_SENSOR_DATA_IN_0_DATA_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_DATA_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_DATA_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_IN_0_DATA_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CLK_EDGE_0  // specified the edge of data latching
#define FAKE_SENSOR_CLK_EDGE_0                  _MK_ADDR_CONST(0x53000038)
#define FAKE_SENSOR_CLK_EDGE_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CLK_EDGE_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CLK_EDGE_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CLK_EDGE_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CLK_EDGE_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CLK_EDGE_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CLK_EDGE_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// 0 = falling edge
// 1 = rising edge
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_SHIFT)
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_RANGE                   31:0
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_WOFFSET                 0x0
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CLK_EDGE_0_CLK_EDGE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_HBLANK_PERIOD_0  // 32 bit data
#define FAKE_SENSOR_HBLANK_PERIOD_0                     _MK_ADDR_CONST(0x5300003c)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_HBLANK_PERIOD_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HBLANK_PERIOD_0_RESET_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HBLANK_PERIOD_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HBLANK_PERIOD_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HBLANK_PERIOD_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_FIELD                 (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_SHIFT)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_RANGE                 31:0
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_WOFFSET                       0x0
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_VBLANK_PERIOD_0  // 32 bit data
#define FAKE_SENSOR_VBLANK_PERIOD_0                     _MK_ADDR_CONST(0x53000040)
#define FAKE_SENSOR_VBLANK_PERIOD_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_VBLANK_PERIOD_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VBLANK_PERIOD_0_RESET_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_VBLANK_PERIOD_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VBLANK_PERIOD_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VBLANK_PERIOD_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_VBLANK_PERIOD_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_RANGE                        31:0
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_WOFFSET                      0x0
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_DEFAULT_MASK                 _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_SENSOR_MODE_0  
#define FAKE_SENSOR_SENSOR_MODE_0                       _MK_ADDR_CONST(0x53000044)
#define FAKE_SENSOR_SENSOR_MODE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_SENSOR_MODE_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_SENSOR_MODE_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_SENSOR_MODE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_SENSOR_MODE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_SENSOR_MODE_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_SENSOR_MODE_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
// When is it USE_EXT_SYNC, then the Sensor waits for 
// VI's hsync to send the next line of dat, and 
// VI's vsync to advance to the next frame of data.
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_SENSOR_MODE_0_MODE_SHIFT)
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_RANGE                    31:0
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_WOFFSET                  0x0
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_SENSOR_MODE_0_MODE_GENERATE_SYNC                    _MK_ENUM_CONST(0)    // // When SENSOR_MODE is GENERATE_SYNC, then 
// HSYNC/VSYNC are generated and sent on 
// the corresponding pins to VI.

#define FAKE_SENSOR_SENSOR_MODE_0_MODE_USE_EXT_SYNC                     _MK_ENUM_CONST(1)

// GPIO_MODE is for testing.  

// Register FAKE_SENSOR_GPIO_MODE_0  // If ENABLED, then the SENSOR will log/report any 
// data it receives off the data pins.
#define FAKE_SENSOR_GPIO_MODE_0                 _MK_ADDR_CONST(0x53000048)
#define FAKE_SENSOR_GPIO_MODE_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_GPIO_MODE_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_GPIO_MODE_0_RESET_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_GPIO_MODE_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_GPIO_MODE_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_GPIO_MODE_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_GPIO_MODE_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_FIELD                       (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_SHIFT)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_RANGE                       31:0
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_WOFFSET                     0x0
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_DEFAULT_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_DISABLED                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_GPIO_MODE_0_GPIO_ENABLE_ENABLED                     _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_DATA_AUTO_GEN_0  // To make simulation faster, sensor can generate 
// data and send it to VI instead of relaying data 
// between IF2SENSOR and VI. Depending on the reg setting, 
// data can be randomly, monotonically increasing, 
// monotonically decreasing or fixed to the seed. 
#define FAKE_SENSOR_DATA_AUTO_GEN_0                     _MK_ADDR_CONST(0x5300004c)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_DATA_AUTO_GEN_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_RESET_MASK                  _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_READ_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_WRITE_MASK                  _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_SHIFT                      _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_FIELD                      (_MK_MASK_CONST(0xff) << FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_SHIFT)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_RANGE                      7:0
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_WOFFSET                    0x0
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT_MASK                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_FIFO                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_RANDOM                     _MK_ENUM_CONST(1)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_SEQINC                     _MK_ENUM_CONST(2)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_SEQDEC                     _MK_ENUM_CONST(3)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_FIXED                      _MK_ENUM_CONST(4)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_BAR                        _MK_ENUM_CONST(5)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_CIRCLE                     _MK_ENUM_CONST(6)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_DATA_GEN_STAR                       _MK_ENUM_CONST(7)

#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_SHIFT                  _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_FIELD                  (_MK_MASK_CONST(0xff) << FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_SHIFT)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_RANGE                  15:8
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_WOFFSET                        0x0
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_DATA_AUTO_GEN_0_SEED_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_HDATA_DELAY_0  // Clocks between the rising edge of hsync, and 
// the first data
#define FAKE_SENSOR_HDATA_DELAY_0                       _MK_ADDR_CONST(0x53000050)
#define FAKE_SENSOR_HDATA_DELAY_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_HDATA_DELAY_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HDATA_DELAY_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HDATA_DELAY_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HDATA_DELAY_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HDATA_DELAY_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HDATA_DELAY_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_HDATA_DELAY_0_WIDTH_SHIFT)
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_RANGE                   31:0
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_WOFFSET                 0x0
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HDATA_DELAY_0_WIDTH_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_HSYNC_CTRL_0  // Whenever VSYNC comes in, HSYNC comes with it, 
// but one clock earlier. For now, this only applies 
// to YUV422.
#define FAKE_SENSOR_HSYNC_CTRL_0                        _MK_ADDR_CONST(0x53000054)
#define FAKE_SENSOR_HSYNC_CTRL_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_HSYNC_CTRL_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_CTRL_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HSYNC_CTRL_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_CTRL_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_CTRL_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HSYNC_CTRL_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_SHIFT)
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_RANGE                    31:0
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_WOFFSET                  0x0
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_HSYNC_CTRL_0_HSYNC_OVERLAP_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_ACTIVE_LEVEL_0  // Active Low or High for Vsync and Hsync.  
// By default they are high, except for Pattern B
#define FAKE_SENSOR_ACTIVE_LEVEL_0                      _MK_ADDR_CONST(0x53000058)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_ACTIVE_LEVEL_0_RESET_VAL                    _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_RESET_MASK                   _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_READ_MASK                    _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_WRITE_MASK                   _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_FIELD                  (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_SHIFT)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_RANGE                  0:0
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_WOFFSET                        0x0
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_DEFAULT                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_HIGH                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_VSYNC_LOW                    _MK_ENUM_CONST(1)

#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_SHIFT                  _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_FIELD                  (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_SHIFT)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_RANGE                  1:1
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_WOFFSET                        0x0
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_DEFAULT                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_HIGH                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ACTIVE_LEVEL_0_HSYNC_LOW                    _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_JPG_DATA_0  // random rate of null data in the JPEG formats. 
// The number can be from 0 to 99. 0 -> no null data 
#define FAKE_SENSOR_JPG_DATA_0                  _MK_ADDR_CONST(0x5300005c)
#define FAKE_SENSOR_JPG_DATA_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_JPG_DATA_0_RESET_VAL                        _MK_MASK_CONST(0x32)
#define FAKE_SENSOR_JPG_DATA_0_RESET_MASK                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_JPG_DATA_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_JPG_DATA_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_JPG_DATA_0_READ_MASK                        _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_JPG_DATA_0_WRITE_MASK                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_FIELD                  (_MK_MASK_CONST(0xff) << FAKE_SENSOR_JPG_DATA_0_NULL_RATE_SHIFT)
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_RANGE                  7:0
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_WOFFSET                        0x0
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_DEFAULT                        _MK_MASK_CONST(0x32)
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_JPG_DATA_0_NULL_RATE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// add more CSI specific programming here

// Register FAKE_SENSOR_TPG_PATTERN_0  // 32 bit data
#define FAKE_SENSOR_TPG_PATTERN_0                       _MK_ADDR_CONST(0x53000060)
#define FAKE_SENSOR_TPG_PATTERN_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_TPG_PATTERN_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TPG_PATTERN_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_TPG_PATTERN_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TPG_PATTERN_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TPG_PATTERN_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_TPG_PATTERN_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_SHIFT)
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_RANGE                   31:0
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_WOFFSET                 0x0
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TPG_PATTERN_0_TPG_PARAMETER_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

//////  Sensor Model in CSI mode  ///////////
// Normally, the sensor model just drives hsync/vsync/clk/data for VI
// The following registers are used to influence the output of data for
// testing CSI

// Register FAKE_SENSOR_ENABLE_CSI_0  
#define FAKE_SENSOR_ENABLE_CSI_0                        _MK_ADDR_CONST(0x53000064)
#define FAKE_SENSOR_ENABLE_CSI_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_ENABLE_CSI_0_RESET_VAL                      _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_ENABLE_CSI_0_RESET_MASK                     _MK_MASK_CONST(0x7)
#define FAKE_SENSOR_ENABLE_CSI_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_READ_MASK                      _MK_MASK_CONST(0x7)
#define FAKE_SENSOR_ENABLE_CSI_0_WRITE_MASK                     _MK_MASK_CONST(0x7)
// ENABLE_CSI, set CSI_MODE to ENABLE to turn on 
// packetizing the stream of sensor data
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_SHIFT)
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_RANGE                 0:0
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_WOFFSET                       0x0
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_DISABLE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ENABLE_CSI_0_CSI_MODE_ENABLE                        _MK_ENUM_CONST(1)

// set USE_DEFAULT_DATA to DISABLE to not use the  old SC15 sensor model data settings
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_SHIFT                 _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_SHIFT)
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_RANGE                 1:1
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_WOFFSET                       0x0
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_DEFAULT                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_DISABLE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ENABLE_CSI_0_USE_DEFAULT_DATA_ENABLE                        _MK_ENUM_CONST(1)

// csi sensor in VIP mode 
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_SHIFT                 _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_SHIFT)
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_RANGE                 2:2
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_WOFFSET                       0x0
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_DISABLE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ENABLE_CSI_0_VIP_MODE_ENABLE                        _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_CSI_ACTIVE_WIN_0  // set active CSI camera A and B
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0                    _MK_ADDR_CONST(0x53000068)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_RESET_MASK                         _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_READ_MASK                  _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WRITE_MASK                         _MK_MASK_CONST(0x3)
// set CSI camara A ENABLE to set camera A active
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_SHIFT)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_RANGE                 0:0
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_DISABLE                       _MK_ENUM_CONST(0)    // // DISABLE to set camera A inactive

#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINA_ENABLE                        _MK_ENUM_CONST(1)

// set CSI camara A ENABLE to set camera B active
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_SHIFT                 _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_SHIFT)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_RANGE                 1:1
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_DISABLE                       _MK_ENUM_CONST(0)    // // DISENABLE to set camera B inactive

#define FAKE_SENSOR_CSI_ACTIVE_WIN_0_WINB_ENABLE                        _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_CSI_SP_CONTROL_0  // set CSI short packet control
#define FAKE_SENSOR_CSI_SP_CONTROL_0                    _MK_ADDR_CONST(0x5300006c)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_CSI_SP_CONTROL_0_RESET_VAL                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_RESET_MASK                         _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_READ_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WRITE_MASK                         _MK_MASK_CONST(0xff)
// line_start enable for virtual channel 0 of camera A
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_RANGE                       0:0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LS_EN_ENABLE                      _MK_ENUM_CONST(1)

// line_start enable for virtual channel 1 of camera A
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_RANGE                       1:1
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LS_EN_ENABLE                      _MK_ENUM_CONST(1)

// line_start enable for virtual channel 0 of camera B
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_SHIFT                       _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_RANGE                       2:2
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LS_EN_ENABLE                      _MK_ENUM_CONST(1)

// line_start enable for virtual channel 1 of camera B
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_SHIFT                       _MK_SHIFT_CONST(3)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_RANGE                       3:3
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LS_EN_ENABLE                      _MK_ENUM_CONST(1)

// line_end enable for virtual channel 0 of camera A  
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_SHIFT                       _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_RANGE                       4:4
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC0_LE_EN_ENABLE                      _MK_ENUM_CONST(1)

// line_end enable for virtual channel 1 of camera A  
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_SHIFT                       _MK_SHIFT_CONST(5)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_RANGE                       5:5
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINA_VC1_LE_EN_ENABLE                      _MK_ENUM_CONST(1)

// line_end enable for virtual channel 0 of camera B  
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_SHIFT                       _MK_SHIFT_CONST(6)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_RANGE                       6:6
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC0_LE_EN_ENABLE                      _MK_ENUM_CONST(1)

// line_end enable for virtual channel 1 of camera B  
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_SHIFT                       _MK_SHIFT_CONST(7)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_RANGE                       7:7
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_CONTROL_0_WINB_VC1_LE_EN_ENABLE                      _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0  // set embedded data control for camera A
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0                 _MK_ADDR_CONST(0x53000070)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_RESET_MASK                      _MK_MASK_CONST(0x3f)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_READ_MASK                       _MK_MASK_CONST(0x3f)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WRITE_MASK                      _MK_MASK_CONST(0x3f)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_SHIFT                      _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_FIELD                      (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_RANGE                      0:0
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_DISABLE                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_EN_ENABLE                     _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_SHIFT                      _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_FIELD                      (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_RANGE                      1:1
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_DISABLE                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_EN_ENABLE                     _MK_ENUM_CONST(1)

// 0=SOF, 1=EOF, 2=SOF and EOF
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_SHIFT                    _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_FIELD                    (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_RANGE                    3:2
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_DEFAULT_MASK                     _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC0_EMBEDDED_TYPE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// 0=SOF, 1=EOF, 2=SOF and EOF
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_SHIFT                    _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_FIELD                    (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_RANGE                    5:4
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_DEFAULT_MASK                     _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0_WINA_VC1_EMBEDDED_TYPE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0  // set embedded data control for camera B
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0                 _MK_ADDR_CONST(0x53000074)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_RESET_MASK                      _MK_MASK_CONST(0x3f)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_READ_MASK                       _MK_MASK_CONST(0x3f)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WRITE_MASK                      _MK_MASK_CONST(0x3f)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_SHIFT                      _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_FIELD                      (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_RANGE                      0:0
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_DISABLE                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_EN_ENABLE                     _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_SHIFT                      _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_FIELD                      (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_RANGE                      1:1
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_DISABLE                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_EN_ENABLE                     _MK_ENUM_CONST(1)

// 0=SOF, 1=EOF, 2=SOF and EOF
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_SHIFT                    _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_FIELD                    (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_RANGE                    3:2
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_DEFAULT_MASK                     _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC0_EMBEDDED_TYPE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// 0=SOF, 1=EOF, 2=SOF and EOF
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_SHIFT                    _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_FIELD                    (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_RANGE                    5:4
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_DEFAULT_MASK                     _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0_WINB_VC1_EMBEDDED_TYPE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0  // set embedded data size for camera A
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0                 _MK_ADDR_CONST(0x53000078)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_RESET_VAL                       _MK_MASK_CONST(0x101000a)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_RESET_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
// embedded data size in bytes
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_SHIFT                      _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_FIELD                      (_MK_MASK_CONST(0xffff) << FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_RANGE                      15:0
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_DEFAULT                    _MK_MASK_CONST(0xa)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_DEFAULT_MASK                       _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_SIZE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// number of embedded lines at the beginning of a frame
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_SHIFT                     _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_RANGE                     23:16
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_DEFAULT                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_TOP_LINES_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// number of embedded lines at the end of a frame
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_SHIFT                     _MK_SHIFT_CONST(24)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_RANGE                     31:24
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_DEFAULT                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0_NUM_BOT_LINES_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0  // set embedded data size for camera B
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0                 _MK_ADDR_CONST(0x5300007c)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_RESET_VAL                       _MK_MASK_CONST(0x101000a)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_RESET_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_SHIFT                      _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_FIELD                      (_MK_MASK_CONST(0xffff) << FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_RANGE                      15:0
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_DEFAULT                    _MK_MASK_CONST(0xa)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_DEFAULT_MASK                       _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_SIZE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_SHIFT                     _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_RANGE                     23:16
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_DEFAULT                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_TOP_LINES_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_SHIFT                     _MK_SHIFT_CONST(24)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_RANGE                     31:24
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_DEFAULT                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0_NUM_BOT_LINES_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0  // set blank data control for camera A
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0                 _MK_ADDR_CONST(0x53000080)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_RESET_MASK                      _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_READ_MASK                       _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WRITE_MASK                      _MK_MASK_CONST(0x3)
// enable blank data for vc0
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_RANGE                 0:0
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_DISABLE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC0_BLANK_EN_ENABLE                        _MK_ENUM_CONST(1)

// enable blank data for vc1 
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_SHIFT                 _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_RANGE                 1:1
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_DISABLE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0_WINA_VC1_BLANK_EN_ENABLE                        _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0  // set blank data control for camera B  
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0                 _MK_ADDR_CONST(0x53000084)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_RESET_MASK                      _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_READ_MASK                       _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WRITE_MASK                      _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_RANGE                 0:0
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_DISABLE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC0_BLANK_EN_ENABLE                        _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_SHIFT                 _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_SHIFT)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_RANGE                 1:1
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_DISABLE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0_WINB_VC1_BLANK_EN_ENABLE                        _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_CSI_WINA_VALID_VC_0  // set valid virtual channel for camera A
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0                 _MK_ADDR_CONST(0x53000088)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_RESET_VAL                       _MK_MASK_CONST(0x11)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_RESET_MASK                      _MK_MASK_CONST(0xfff)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_READ_MASK                       _MK_MASK_CONST(0xfff)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_WRITE_MASK                      _MK_MASK_CONST(0xfff)
// set vc0 enable
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_RANGE                       0:0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_ENABLE                      _MK_ENUM_CONST(1)

// set vc1 enable
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_RANGE                       1:1
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_ENABLE                      _MK_ENUM_CONST(1)

// set vc0 id
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_SHIFT                   _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_FIELD                   (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_RANGE                   3:2
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_DEFAULT_MASK                    _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_NUM_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// set vc1 id 
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_SHIFT                   _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_FIELD                   (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_RANGE                   5:4
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_DEFAULT                 _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_DEFAULT_MASK                    _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_NUM_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// send incrementing data rather than  sensor data for ease in debugging
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_SHIFT                       _MK_SHIFT_CONST(6)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_RANGE                       6:6
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_INCDATA_ENABLE                      _MK_ENUM_CONST(1)

// send incrementing data rather than  sensor data for ease in debugging
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_SHIFT                       _MK_SHIFT_CONST(7)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_RANGE                       7:7
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC1_INCDATA_ENABLE                      _MK_ENUM_CONST(1)

// one vc, two data types
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_FIELD                     (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_RANGE                     8:8
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_DISABLE                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DUAL_DATA_ENABLE                    _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_SHIFT                       _MK_SHIFT_CONST(9)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_FIELD                       (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_RANGE                       10:9
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_DEFAULT_MASK                        _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_LINE                        _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_CHUNK                       _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_DD_TYPE_FRAME                       _MK_ENUM_CONST(2)

#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_SHIFT                     _MK_SHIFT_CONST(11)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_FIELD                     (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_RANGE                     11:11
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VALID_VC_0_VC0_MIDSTREAM_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VALID_VC_0  
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0                 _MK_ADDR_CONST(0x5300008c)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_RESET_VAL                       _MK_MASK_CONST(0x11)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_RESET_MASK                      _MK_MASK_CONST(0xfff)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_READ_MASK                       _MK_MASK_CONST(0xfff)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_WRITE_MASK                      _MK_MASK_CONST(0xfff)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_RANGE                       0:0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DEFAULT                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_ENABLE                      _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_RANGE                       1:1
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_ENABLE                      _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_SHIFT                   _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_FIELD                   (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_RANGE                   3:2
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_DEFAULT_MASK                    _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_NUM_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_SHIFT                   _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_FIELD                   (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_RANGE                   5:4
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_DEFAULT                 _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_DEFAULT_MASK                    _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_NUM_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// send incrementing data rather than  sensor data for ease in debugging
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_SHIFT                       _MK_SHIFT_CONST(6)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_RANGE                       6:6
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_INCDATA_ENABLE                      _MK_ENUM_CONST(1)

// send incrementing data rather than  sensor data for ease in debugging
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_SHIFT                       _MK_SHIFT_CONST(7)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_RANGE                       7:7
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC1_INCDATA_ENABLE                      _MK_ENUM_CONST(1)

// one vc, two data types
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_FIELD                     (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_RANGE                     8:8
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_DISABLE                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DUAL_DATA_ENABLE                    _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_SHIFT                       _MK_SHIFT_CONST(9)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_FIELD                       (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_RANGE                       10:9
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_DEFAULT_MASK                        _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_LINE                        _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_CHUNK                       _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_DD_TYPE_FRAME                       _MK_ENUM_CONST(2)

#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_SHIFT                     _MK_SHIFT_CONST(11)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_FIELD                     (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_RANGE                     11:11
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VALID_VC_0_VC0_MIDSTREAM_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_NUMLANES_0  // set number of lanes for camera A
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0                 _MK_ADDR_CONST(0x53000090)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_RESET_MASK                      _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_READ_MASK                       _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_WRITE_MASK                      _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_FIELD                     (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_SHIFT)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_RANGE                     1:0
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_DEFAULT                   _MK_MASK_CONST(0x4)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_DEFAULT_MASK                      _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_NUMLANES_0_LANES_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_PSPACE_0  // set the spacing between short packets 
// the spacing is in clock cycles  
#define FAKE_SENSOR_CSI_WINA_PSPACE_0                   _MK_ADDR_CONST(0x53000094)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_RESET_VAL                         _MK_MASK_CONST(0x10000c)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_RESET_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_WRITE_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_FIELD                  (_MK_MASK_CONST(0xffff) << FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_RANGE                  15:0
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_DEFAULT                        _MK_MASK_CONST(0xc)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_DEFAULT_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC0_PSPACE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_SHIFT                  _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_FIELD                  (_MK_MASK_CONST(0xffff) << FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_RANGE                  31:16
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_DEFAULT                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_DEFAULT_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_PSPACE_0_VC1_PSPACE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_PSPACE_0  // set the spacing between short packets 
// the spacing is in clock cycles  
#define FAKE_SENSOR_CSI_WINB_PSPACE_0                   _MK_ADDR_CONST(0x53000098)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_RESET_VAL                         _MK_MASK_CONST(0x10000c)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_RESET_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_WRITE_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_FIELD                  (_MK_MASK_CONST(0xffff) << FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_RANGE                  15:0
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_DEFAULT                        _MK_MASK_CONST(0xc)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_DEFAULT_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC0_PSPACE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_SHIFT                  _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_FIELD                  (_MK_MASK_CONST(0xffff) << FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_RANGE                  31:16
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_DEFAULT                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_DEFAULT_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_PSPACE_0_VC1_PSPACE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0  // set line width in pixels
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0                  _MK_ADDR_CONST(0x5300009c)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_RESET_VAL                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// (old) the distance between two rising edge of hsync
// (old) unit: clock
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_DEFAULT                   _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0_STRIDE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0  
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0                 _MK_ADDR_CONST(0x530000a0)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_RESET_VAL                       _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_RESET_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
// the distance between two rising edge of vsync
// unit: lines
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_DEFAULT                  _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0_STRIDE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0  // set the number of frames
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0                    _MK_ADDR_CONST(0x530000a4)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_RESET_VAL                  _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_RESET_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_READ_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_WRITE_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_RANGE                        31:0
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_DEFAULT                      _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_DEFAULT_MASK                 _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0_START_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0  // specifies the output format
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0                  _MK_ADDR_CONST(0x530000a8)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_RESET_VAL                        _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_DEFAULT                   _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_BAYER_12                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_BAYER_8                   _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_JPEG_A                    _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_JPEG_B                    _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_JPEG_C                    _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YUYV_422                  _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_UYVY_422                  _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YVYU_422                  _MK_ENUM_CONST(7)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_VYUY_422                  _MK_ENUM_CONST(8)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YUV_422_10                        _MK_ENUM_CONST(9)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YUV_420P                  _MK_ENUM_CONST(10)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YUV_420_10                        _MK_ENUM_CONST(11)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YUV_420_L                 _MK_ENUM_CONST(12)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_8                    _MK_ENUM_CONST(13)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_10                   _MK_ENUM_CONST(14)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_RGB_444                   _MK_ENUM_CONST(15)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_RGB_555                   _MK_ENUM_CONST(16)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_RGB_565                   _MK_ENUM_CONST(17)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_RGB_666                   _MK_ENUM_CONST(18)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_RGB_888                   _MK_ENUM_CONST(19)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_BAYER_6                   _MK_ENUM_CONST(20)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_BAYER_7                   _MK_ENUM_CONST(21)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_BAYER_10                  _MK_ENUM_CONST(22)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_BAYER_14                  _MK_ENUM_CONST(23)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0_FORMAT_CCIR_656                  _MK_ENUM_CONST(24)


// Register FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0  // set blank time between packets
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0                        _MK_ADDR_CONST(0x530000ac)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_DEFAULT                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0  // set blank time between frames
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0                        _MK_ADDR_CONST(0x530000b0)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_RANGE                   31:0
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_DEFAULT                 _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0  // set line width in pixels
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0                  _MK_ADDR_CONST(0x530000b4)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_RESET_VAL                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// (old) the distance between two rising edge of hsync
// (old) unit: clock
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_DEFAULT                   _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0_STRIDE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0  
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0                 _MK_ADDR_CONST(0x530000b8)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_RESET_VAL                       _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_RESET_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
// (old) the distance between two rising edge of vsync
// (old) unit: lines
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_DEFAULT                  _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0_STRIDE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0  // set number of frames
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0                    _MK_ADDR_CONST(0x530000bc)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_RESET_VAL                  _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_RESET_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_READ_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_WRITE_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_RANGE                        31:0
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_DEFAULT                      _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_DEFAULT_MASK                 _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0_START_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0  // specifies the output format
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0                  _MK_ADDR_CONST(0x530000c0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_RESET_VAL                        _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_DEFAULT                   _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_BAYER_12                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_BAYER_8                   _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_JPEG_A                    _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_JPEG_B                    _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_JPEG_C                    _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YUYV_422                  _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_UYVY_422                  _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YVYU_422                  _MK_ENUM_CONST(7)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_VYUY_422                  _MK_ENUM_CONST(8)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YUV_422_10                        _MK_ENUM_CONST(9)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YUV_420P                  _MK_ENUM_CONST(10)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YUV_420_10                        _MK_ENUM_CONST(11)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YUV_420_L                 _MK_ENUM_CONST(12)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_8                    _MK_ENUM_CONST(13)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_10                   _MK_ENUM_CONST(14)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_RGB_444                   _MK_ENUM_CONST(15)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_RGB_555                   _MK_ENUM_CONST(16)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_RGB_565                   _MK_ENUM_CONST(17)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_RGB_666                   _MK_ENUM_CONST(18)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_RGB_888                   _MK_ENUM_CONST(19)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_BAYER_6                   _MK_ENUM_CONST(20)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_BAYER_7                   _MK_ENUM_CONST(21)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_BAYER_10                  _MK_ENUM_CONST(22)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_BAYER_14                  _MK_ENUM_CONST(23)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0_FORMAT_CCIR_656                  _MK_ENUM_CONST(24)


// Register FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0  // set blank time between packets
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0                        _MK_ADDR_CONST(0x530000c4)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0  // set blank time between frames
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0                        _MK_ADDR_CONST(0x530000c8)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_RANGE                   31:0
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0  // set line width in pixels for 2nd data type
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0                       _MK_ADDR_CONST(0x530000cc)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_RESET_VAL                     _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
// (old) the distance between two rising edge of hsync
// (old) unit: clock
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_FIELD                  (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_RANGE                  31:0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_DEFAULT                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_DEFAULT_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0_STRIDE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0  // set frame size in lines for 2nd data type
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0                      _MK_ADDR_CONST(0x530000d0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_RESET_VAL                    _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_RESET_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_READ_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_WRITE_MASK                   _MK_MASK_CONST(0xffffffff)
// (old) the distance between two rising edge of vsync, 
// (old) unit: lines
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_FIELD                 (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_RANGE                 31:0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_DEFAULT                       _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_DEFAULT_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0_STRIDE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0  // specifies the output format for 2nd data type
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0                       _MK_ADDR_CONST(0x530000d4)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_RESET_VAL                     _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_FIELD                  (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_RANGE                  31:0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_DEFAULT                        _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_DEFAULT_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_12                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_8                        _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_JPEG_A                 _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_JPEG_B                 _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_JPEG_C                 _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YUYV_422                       _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_UYVY_422                       _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YVYU_422                       _MK_ENUM_CONST(7)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_VYUY_422                       _MK_ENUM_CONST(8)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_422_10                     _MK_ENUM_CONST(9)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420P                       _MK_ENUM_CONST(10)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_10                     _MK_ENUM_CONST(11)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_L                      _MK_ENUM_CONST(12)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_8                 _MK_ENUM_CONST(13)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_10                        _MK_ENUM_CONST(14)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_444                        _MK_ENUM_CONST(15)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_555                        _MK_ENUM_CONST(16)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_565                        _MK_ENUM_CONST(17)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_666                        _MK_ENUM_CONST(18)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_888                        _MK_ENUM_CONST(19)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_6                        _MK_ENUM_CONST(20)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_7                        _MK_ENUM_CONST(21)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_10                       _MK_ENUM_CONST(22)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_14                       _MK_ENUM_CONST(23)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0_FORMAT_CCIR_656                       _MK_ENUM_CONST(24)


// Register FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0  
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0                     _MK_ADDR_CONST(0x530000d8)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_RESET_VAL                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_RESET_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_FIELD                 (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_RANGE                 31:0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_DEFAULT                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0  
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0                     _MK_ADDR_CONST(0x530000dc)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_RESET_VAL                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_RESET_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_RANGE                        31:0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_DEFAULT                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_DEFAULT_MASK                 _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0  
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0                  _MK_ADDR_CONST(0x530000e0)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_RESET_VAL                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_DEFAULT                   _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0_STRIDE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0  
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0                 _MK_ADDR_CONST(0x530000e4)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_RESET_VAL                       _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_RESET_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_DEFAULT                  _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0_STRIDE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0  
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0                    _MK_ADDR_CONST(0x530000e8)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_RESET_VAL                  _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_RESET_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_READ_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_WRITE_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_RANGE                        31:0
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_DEFAULT                      _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_DEFAULT_MASK                 _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0_START_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0  // specifies the output format
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0                  _MK_ADDR_CONST(0x530000ec)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_RESET_VAL                        _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_DEFAULT                   _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_BAYER_12                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_BAYER_8                   _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_JPEG_A                    _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_JPEG_B                    _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_JPEG_C                    _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YUYV_422                  _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_UYVY_422                  _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YVYU_422                  _MK_ENUM_CONST(7)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_VYUY_422                  _MK_ENUM_CONST(8)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YUV_422_10                        _MK_ENUM_CONST(9)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YUV_420P                  _MK_ENUM_CONST(10)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YUV_420_10                        _MK_ENUM_CONST(11)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YUV_420_L                 _MK_ENUM_CONST(12)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_8                    _MK_ENUM_CONST(13)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_10                   _MK_ENUM_CONST(14)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_RGB_444                   _MK_ENUM_CONST(15)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_RGB_555                   _MK_ENUM_CONST(16)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_RGB_565                   _MK_ENUM_CONST(17)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_RGB_666                   _MK_ENUM_CONST(18)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_RGB_888                   _MK_ENUM_CONST(19)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_BAYER_6                   _MK_ENUM_CONST(20)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_BAYER_7                   _MK_ENUM_CONST(21)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_BAYER_10                  _MK_ENUM_CONST(22)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_BAYER_14                  _MK_ENUM_CONST(23)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0_FORMAT_CCIR_656                  _MK_ENUM_CONST(24)


// Register FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0  
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0                        _MK_ADDR_CONST(0x530000f0)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_DEFAULT                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0  
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0                        _MK_ADDR_CONST(0x530000f4)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_RANGE                   31:0
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_DEFAULT                 _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0  
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0                  _MK_ADDR_CONST(0x530000f8)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_RESET_VAL                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_DEFAULT                   _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0_STRIDE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0  
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0                 _MK_ADDR_CONST(0x530000fc)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_RESET_VAL                       _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_RESET_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_DEFAULT                  _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0_STRIDE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0  
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0                    _MK_ADDR_CONST(0x53000100)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_RESET_VAL                  _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_RESET_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_READ_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_WRITE_MASK                         _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_RANGE                        31:0
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_DEFAULT                      _MK_MASK_CONST(0x2)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_DEFAULT_MASK                 _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0_START_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0  // specifies the output format
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0                  _MK_ADDR_CONST(0x53000104)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_RESET_VAL                        _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_FIELD                     (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_RANGE                     31:0
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_DEFAULT                   _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_DEFAULT_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_BAYER_12                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_BAYER_8                   _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_JPEG_A                    _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_JPEG_B                    _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_JPEG_C                    _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YUYV_422                  _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_UYVY_422                  _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YVYU_422                  _MK_ENUM_CONST(7)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_VYUY_422                  _MK_ENUM_CONST(8)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YUV_422_10                        _MK_ENUM_CONST(9)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YUV_420P                  _MK_ENUM_CONST(10)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YUV_420_10                        _MK_ENUM_CONST(11)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YUV_420_L                 _MK_ENUM_CONST(12)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_8                    _MK_ENUM_CONST(13)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_10                   _MK_ENUM_CONST(14)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_RGB_444                   _MK_ENUM_CONST(15)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_RGB_555                   _MK_ENUM_CONST(16)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_RGB_565                   _MK_ENUM_CONST(17)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_RGB_666                   _MK_ENUM_CONST(18)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_RGB_888                   _MK_ENUM_CONST(19)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_BAYER_6                   _MK_ENUM_CONST(20)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_BAYER_7                   _MK_ENUM_CONST(21)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_BAYER_10                  _MK_ENUM_CONST(22)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_BAYER_14                  _MK_ENUM_CONST(23)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0_FORMAT_CCIR_656                  _MK_ENUM_CONST(24)


// Register FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0  // 32 bit data
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0                        _MK_ADDR_CONST(0x53000108)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_FIELD                    (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_RANGE                    31:0
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_DEFAULT_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0  // 32 bit data
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0                        _MK_ADDR_CONST(0x5300010c)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_RESET_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_FIELD                   (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_RANGE                   31:0
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_DEFAULT_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0  
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0                       _MK_ADDR_CONST(0x53000110)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_RESET_VAL                     _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_FIELD                  (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_RANGE                  31:0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_DEFAULT                        _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_DEFAULT_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0_STRIDE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0  
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0                      _MK_ADDR_CONST(0x53000114)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_RESET_VAL                    _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_RESET_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_READ_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_WRITE_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_FIELD                 (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_RANGE                 31:0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_DEFAULT                       _MK_MASK_CONST(0x10)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_DEFAULT_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0_STRIDE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0  // specifies the output format
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0                       _MK_ADDR_CONST(0x53000118)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_RESET_VAL                     _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_RESET_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_WRITE_MASK                    _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_FIELD                  (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_RANGE                  31:0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_DEFAULT                        _MK_MASK_CONST(0x5)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_DEFAULT_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_12                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_8                        _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_JPEG_A                 _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_JPEG_B                 _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_JPEG_C                 _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YUYV_422                       _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_UYVY_422                       _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YVYU_422                       _MK_ENUM_CONST(7)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_VYUY_422                       _MK_ENUM_CONST(8)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_422_10                     _MK_ENUM_CONST(9)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420P                       _MK_ENUM_CONST(10)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_10                     _MK_ENUM_CONST(11)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_L                      _MK_ENUM_CONST(12)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_8                 _MK_ENUM_CONST(13)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_YUV_420_CSPS_10                        _MK_ENUM_CONST(14)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_444                        _MK_ENUM_CONST(15)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_555                        _MK_ENUM_CONST(16)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_565                        _MK_ENUM_CONST(17)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_666                        _MK_ENUM_CONST(18)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_RGB_888                        _MK_ENUM_CONST(19)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_6                        _MK_ENUM_CONST(20)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_7                        _MK_ENUM_CONST(21)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_10                       _MK_ENUM_CONST(22)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_BAYER_14                       _MK_ENUM_CONST(23)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0_FORMAT_CCIR_656                       _MK_ENUM_CONST(24)


// Register FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0  // 32 bit data
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0                     _MK_ADDR_CONST(0x5300011c)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_RESET_VAL                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_RESET_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_FIELD                 (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_RANGE                 31:0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_DEFAULT                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0  // 32 bit data
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0                     _MK_ADDR_CONST(0x53000120)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_RESET_VAL                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_RESET_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_FIELD                        (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_RANGE                        31:0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_DEFAULT                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_DEFAULT_MASK                 _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0_HEIGHT_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0  
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0                        _MK_ADDR_CONST(0x53000124)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_RESET_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_READ_MASK                      _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_WRITE_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_RANGE                 7:0
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_FIFO                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_RANDOM                        _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_SEQINC                        _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_SEQDEC                        _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_FIXED                 _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_BAR                   _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_CIRCLE                        _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_DATA_GEN_STAR                  _MK_ENUM_CONST(7)

#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_RANGE                     15:8
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0_SEED_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0  
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0                      _MK_ADDR_CONST(0x53000128)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_RESET_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_READ_MASK                    _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_WRITE_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_FIELD                       (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_RANGE                       7:0
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT_MASK                        _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_FIFO                        _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_RANDOM                      _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SEQINC                      _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SEQDEC                      _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_FIXED                       _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_BAR                 _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_CIRCLE                      _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_STAR                        _MK_ENUM_CONST(7)

#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_SHIFT                   _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_FIELD                   (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_RANGE                   15:8
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_DEFAULT_MASK                    _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0_SEED_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0  
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0                        _MK_ADDR_CONST(0x5300012c)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_RESET_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_READ_MASK                      _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_WRITE_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_RANGE                 7:0
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_FIFO                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_RANDOM                        _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_SEQINC                        _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_SEQDEC                        _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_FIXED                 _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_BAR                   _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_CIRCLE                        _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_DATA_GEN_STAR                  _MK_ENUM_CONST(7)

#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_RANGE                     15:8
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0_SEED_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0  
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0                        _MK_ADDR_CONST(0x53000130)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_RESET_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_READ_MASK                      _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_WRITE_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_RANGE                 7:0
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_FIFO                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_RANDOM                        _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_SEQINC                        _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_SEQDEC                        _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_FIXED                 _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_BAR                   _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_CIRCLE                        _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_DATA_GEN_STAR                  _MK_ENUM_CONST(7)

#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_RANGE                     15:8
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0_SEED_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0  
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0                      _MK_ADDR_CONST(0x53000134)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_RESET_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_READ_MASK                    _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_WRITE_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_FIELD                       (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_RANGE                       7:0
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT_MASK                        _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_FIFO                        _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_RANDOM                      _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SEQINC                      _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_SEQDEC                      _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_FIXED                       _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_BAR                 _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_CIRCLE                      _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_DATA_GEN_STAR                        _MK_ENUM_CONST(7)

#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_SHIFT                   _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_FIELD                   (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_RANGE                   15:8
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_DEFAULT_MASK                    _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0_SEED_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0  
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0                        _MK_ADDR_CONST(0x53000138)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_RESET_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_READ_MASK                      _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_WRITE_MASK                     _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_RANGE                 7:0
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_FIFO                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_RANDOM                        _MK_ENUM_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_SEQINC                        _MK_ENUM_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_SEQDEC                        _MK_ENUM_CONST(3)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_FIXED                 _MK_ENUM_CONST(4)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_BAR                   _MK_ENUM_CONST(5)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_CIRCLE                        _MK_ENUM_CONST(6)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_DATA_GEN_STAR                  _MK_ENUM_CONST(7)

#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_RANGE                     15:8
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0_SEED_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0  // set long packet control
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0                   _MK_ADDR_CONST(0x5300013c)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_RESET_MASK                        _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_READ_MASK                         _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_WRITE_MASK                        _MK_MASK_CONST(0x7f)
// set too long packet enable
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_RANGE                       0:0
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// set short of packet enable
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_RANGE                       1:1
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// the diff from the expected packet size
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT                   _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_FIELD                   (_MK_MASK_CONST(0x1f) << FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_RANGE                   6:2
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT_MASK                    _MK_MASK_CONST(0x1f)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0  
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0                   _MK_ADDR_CONST(0x53000140)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_RESET_MASK                        _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_READ_MASK                         _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_WRITE_MASK                        _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_RANGE                       0:0
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_RANGE                       1:1
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT                   _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_FIELD                   (_MK_MASK_CONST(0x1f) << FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_RANGE                   6:2
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT_MASK                    _MK_MASK_CONST(0x1f)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0  
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0                   _MK_ADDR_CONST(0x53000144)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_RESET_MASK                        _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_READ_MASK                         _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_WRITE_MASK                        _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_RANGE                       0:0
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_RANGE                       1:1
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT                   _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_FIELD                   (_MK_MASK_CONST(0x1f) << FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_RANGE                   6:2
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT_MASK                    _MK_MASK_CONST(0x1f)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0  
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0                   _MK_ADDR_CONST(0x53000148)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_RESET_MASK                        _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_READ_MASK                         _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_WRITE_MASK                        _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_RANGE                       0:0
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_EXTRA_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_RANGE                       1:1
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_SHORT_DATA_EN_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT                   _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_FIELD                   (_MK_MASK_CONST(0x1f) << FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_RANGE                   6:2
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_DEFAULT_MASK                    _MK_MASK_CONST(0x1f)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0_DATA_SIZE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0  // set camera A timing control
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0                   _MK_ADDR_CONST(0x5300014c)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RESET_MASK                        _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_READ_MASK                         _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_WRITE_MASK                        _MK_MASK_CONST(0xff)
// set random timing enable
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_SHIFT)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_RANGE                   0:0
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_RANDOM_EN_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// set random seed
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_SHIFT                        _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_FIELD                        (_MK_MASK_CONST(0x7f) << FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_RANGE                        7:1
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_DEFAULT_MASK                 _MK_MASK_CONST(0x7f)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0_SEED_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0  // set camera B timing control
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0                   _MK_ADDR_CONST(0x53000150)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RESET_MASK                        _MK_MASK_CONST(0xff01)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_READ_MASK                         _MK_MASK_CONST(0xff01)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_WRITE_MASK                        _MK_MASK_CONST(0xff01)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_SHIFT)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_RANGE                   0:0
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_RANDOM_EN_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_SHIFT                        _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_FIELD                        (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_SHIFT)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_RANGE                        15:8
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_WOFFSET                      0x0
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_DEFAULT_MASK                 _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0_SEED_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0  // set CIL timing parameters
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0                     _MK_ADDR_CONST(0x53000154)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_RESET_MASK                  _MK_MASK_CONST(0xffffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_READ_MASK                   _MK_MASK_CONST(0xffffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_WRITE_MASK                  _MK_MASK_CONST(0xffffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_FIELD                   (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_RANGE                   7:0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_DEFAULT_MASK                    _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_LPX_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_SHIFT                    _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_FIELD                    (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_RANGE                    15:8
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_DEFAULT_MASK                     _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_PREPARE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_SHIFT                       _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_FIELD                       (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_RANGE                       23:16
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_DEFAULT_MASK                        _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0_HS_ZERO_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0  // set CIL timing parameters
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0                     _MK_ADDR_CONST(0x53000158)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_RESET_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_SHIFT                      _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_FIELD                      (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_RANGE                      7:0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_DEFAULT_MASK                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_HS_TRAIL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_SHIFT                      _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_FIELD                      (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_RANGE                      15:8
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_DEFAULT_MASK                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_ZERO_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_SHIFT                       _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_FIELD                       (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_RANGE                       23:16
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_DEFAULT_MASK                        _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_PRE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_SHIFT                      _MK_SHIFT_CONST(24)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_FIELD                      (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_RANGE                      31:24
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_DEFAULT_MASK                       _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0_CLK_POST_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0  // set CIL timing parameters
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0                     _MK_ADDR_CONST(0x5300015c)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_WORD_COUNT                  0x1
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_RESET_MASK                  _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_READ_MASK                   _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_WRITE_MASK                  _MK_MASK_CONST(0xffff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_SHIFT                     _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_RANGE                     7:0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_CLK_TRAIL_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_SHIFT                       _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_FIELD                       (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_SHIFT)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_RANGE                       15:8
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_DEFAULT_MASK                        _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0_HS_EXIT_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0  // set escape mode control register
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0                 _MK_ADDR_CONST(0x53000160)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_RESET_MASK                      _MK_MASK_CONST(0xffffff7f)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_READ_MASK                       _MK_MASK_CONST(0xffffff7f)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_WRITE_MASK                      _MK_MASK_CONST(0xffffff7f)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_FIELD                       (_MK_MASK_CONST(0xf) << FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_RANGE                       3:0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_DEFAULT_MASK                        _MK_MASK_CONST(0xf)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_NO_OP                       _MK_ENUM_CONST(0)    // // no_op

#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_ULPS                        _MK_ENUM_CONST(1)    // // Ultra-low power state

#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_LPDT                        _MK_ENUM_CONST(2)    // // Low power data transmission

#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_CMD_RAR                 _MK_ENUM_CONST(3)    // // Remote application reset


// set entry sequence randomization enable 
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SHIFT                      _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_FIELD                      (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_RANGE                      4:4
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// set entry code randomization enable
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_SHIFT                   _MK_SHIFT_CONST(5)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_RANGE                   5:5
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_CODE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// set entry code width randomization enable
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_SHIFT                  _MK_SHIFT_CONST(6)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_FIELD                  (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_RANGE                  6:6
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_EN_WIDTH_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// set entry sequence value
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_RANGE                     15:8
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// set entry code value
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_SHIFT                  _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_FIELD                  (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_RANGE                  23:16
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_CODE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// set entry code width value
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_SHIFT                 _MK_SHIFT_CONST(24)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_RANGE                 31:24
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0_SET_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0  
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0                 _MK_ADDR_CONST(0x53000164)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_WORD_COUNT                      0x1
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_RESET_MASK                      _MK_MASK_CONST(0xffffff7f)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_READ_MASK                       _MK_MASK_CONST(0xffffff7f)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_WRITE_MASK                      _MK_MASK_CONST(0xffffff7f)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_FIELD                       (_MK_MASK_CONST(0xf) << FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_RANGE                       3:0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_DEFAULT_MASK                        _MK_MASK_CONST(0xf)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_NO_OP                       _MK_ENUM_CONST(0)    // // no_op

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_ULPS                        _MK_ENUM_CONST(1)    // // Ultra-low power state

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_LPDT                        _MK_ENUM_CONST(2)    // // Low power data transmission

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_CMD_RAR                 _MK_ENUM_CONST(3)    // // Remote application reset


#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SHIFT                      _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_FIELD                      (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_RANGE                      4:4
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_WOFFSET                    0x0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_ENTRY_SEQ_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_SHIFT                   _MK_SHIFT_CONST(5)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_RANGE                   5:5
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_CODE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_SHIFT                  _MK_SHIFT_CONST(6)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_FIELD                  (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_RANGE                  6:6
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_EN_WIDTH_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SHIFT                     _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_FIELD                     (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_RANGE                     15:8
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_DEFAULT_MASK                      _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_ENTRY_SEQ_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_SHIFT                  _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_FIELD                  (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_RANGE                  23:16
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_CODE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_SHIFT                 _MK_SHIFT_CONST(24)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_RANGE                 31:24
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0_SET_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0  // set CIL error injection register 
// Only one type of errors can be inserted 
// at a time. At most two bits of errors are
// allowed.
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0                  _MK_ADDR_CONST(0x53000168)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// set error type
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_FIELD                    (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_RANGE                    1:0
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_DEFAULT_MASK                     _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_NO_ERR                   _MK_ENUM_CONST(0)    // // no_op

#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_SOT                      _MK_ENUM_CONST(1)    // // SOT error

#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_HEADER                   _MK_ENUM_CONST(2)    // // header error

#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_COMMAND_PAYLOAD                  _MK_ENUM_CONST(3)    // // payload error


// index of the first error bit
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_SHIFT                     _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_FIELD                     (_MK_MASK_CONST(0x3fff) << FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_RANGE                     15:2
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_DEFAULT_MASK                      _MK_MASK_CONST(0x3fff)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX1_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// set random error bit position enable
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_SHIFT                 _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_RANGE                 16:16
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_RANDOM_SEL_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// set one bit error(0) or two bits error(1)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_SHIFT                       _MK_SHIFT_CONST(17)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_RANGE                       17:17
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_ONE                 _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_BITS_TWO                 _MK_ENUM_CONST(1)

// index of the second error bit
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_SHIFT                     _MK_SHIFT_CONST(18)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_FIELD                     (_MK_MASK_CONST(0x3fff) << FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_SHIFT)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_RANGE                     31:18
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_DEFAULT_MASK                      _MK_MASK_CONST(0x3fff)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0_INDEX2_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0  
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0                  _MK_ADDR_CONST(0x5300016c)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_SHIFT                    _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_FIELD                    (_MK_MASK_CONST(0x3) << FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_RANGE                    1:0
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_DEFAULT_MASK                     _MK_MASK_CONST(0x3)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_NO_ERR                   _MK_ENUM_CONST(0)    // // no_op

#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_SOT                      _MK_ENUM_CONST(1)    // // SOT error

#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_HEADER                   _MK_ENUM_CONST(2)    // // header error

#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_COMMAND_PAYLOAD                  _MK_ENUM_CONST(3)    // // payload error


#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_SHIFT                     _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_FIELD                     (_MK_MASK_CONST(0x3fff) << FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_RANGE                     15:2
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_DEFAULT_MASK                      _MK_MASK_CONST(0x3fff)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX1_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_SHIFT                 _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_RANGE                 16:16
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_RANDOM_SEL_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_SHIFT                       _MK_SHIFT_CONST(17)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_RANGE                       17:17
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_ONE                 _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_BITS_TWO                 _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_SHIFT                     _MK_SHIFT_CONST(18)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_FIELD                     (_MK_MASK_CONST(0x3fff) << FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_SHIFT)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_RANGE                     31:18
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_WOFFSET                   0x0
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_DEFAULT_MASK                      _MK_MASK_CONST(0x3fff)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0_INDEX2_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0  // set divide ratio for serial clock
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0                      _MK_ADDR_CONST(0x53000170)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RESET_VAL                    _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RESET_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_READ_MASK                    _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_WRITE_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_FIELD                  (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_SHIFT)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_RANGE                  7:0
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_DEFAULT                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0_RATIO_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0  
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0                        _MK_ADDR_CONST(0x53000174)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_RESET_MASK                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_READ_MASK                      _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_WRITE_MASK                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_SHIFT                 _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_SHIFT)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_RANGE                 0:0
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_WOFFSET                       0x0
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0_COINCIDE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0  // set debug data control
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0                    _MK_ADDR_CONST(0x53000178)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_WORD_COUNT                         0x1
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_RESET_MASK                         _MK_MASK_CONST(0x30003)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_READ_MASK                  _MK_MASK_CONST(0x30003)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_WRITE_MASK                         _MK_MASK_CONST(0x30003)
// if disabled, every line has the same counting pattern if enabled, different lines within one frame 
// have different counting patterns
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_SHIFT)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_RANGE                       0:0
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC0_COUNT_X_LINES_ENABLE                      _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_SHIFT                       _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_SHIFT)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_RANGE                       1:1
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMA_VC1_COUNT_X_LINES_ENABLE                      _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_SHIFT                       _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_SHIFT)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_RANGE                       16:16
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC0_COUNT_X_LINES_ENABLE                      _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_SHIFT                       _MK_SHIFT_CONST(17)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_FIELD                       (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_SHIFT)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_RANGE                       17:17
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_DISABLE                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0_CAMB_VC1_COUNT_X_LINES_ENABLE                      _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_CSI_CILA_COMMAND_0  // set command for sensor2cil_command
#define FAKE_SENSOR_CSI_CILA_COMMAND_0                  _MK_ADDR_CONST(0x5300017c)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_RESET_MASK                       _MK_MASK_CONST(0x1fff)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_READ_MASK                        _MK_MASK_CONST(0x1fff)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_WRITE_MASK                       _MK_MASK_CONST(0x1fff)
// NO_OP    =0x0,   
// ESC_ULPS =0x1, escape mode: ultra low power state
// ESC_LPDT =0x2, escape mode: low power data transmission 
// ESC_RAR  =0x3, escape mode: remote application reset
// SOT_ERR  =0x4, use SOT_CODE for SOT error injection
// FR_HSCLK =0x5, set free running hs clock
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_FIELD                   (_MK_MASK_CONST(0x1f) << FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_SHIFT)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_RANGE                   4:0
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_DEFAULT_MASK                    _MK_MASK_CONST(0x1f)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_CMD_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_SHIFT                 _MK_SHIFT_CONST(5)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_SHIFT)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_RANGE                 12:5
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILA_COMMAND_0_CILA_PARAM_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_CILB_COMMAND_0  // set command for sensor2cil_command
#define FAKE_SENSOR_CSI_CILB_COMMAND_0                  _MK_ADDR_CONST(0x53000180)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_RESET_MASK                       _MK_MASK_CONST(0x1fff)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_READ_MASK                        _MK_MASK_CONST(0x1fff)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_WRITE_MASK                       _MK_MASK_CONST(0x1fff)
// NO_OP    =0x0,   
// ESC_ULPS =0x1, escape mode: ultra low power state
// ESC_LPDT =0x2, escape mode: low power data transmission 
// ESC_RAR  =0x3, escape mode: remote application reset
// SOT_ERR  =0x4, use SOT_CODE for SOT error injection
// FR_HSCLK =0x5, set free running hs clock
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_FIELD                   (_MK_MASK_CONST(0x1f) << FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_SHIFT)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_RANGE                   4:0
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_DEFAULT_MASK                    _MK_MASK_CONST(0x1f)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_CMD_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_SHIFT                 _MK_SHIFT_CONST(5)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_FIELD                 (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_SHIFT)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_RANGE                 12:5
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_DEFAULT_MASK                  _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_CILB_COMMAND_0_CILB_PARAM_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

//Pattern D ISDBT mode registers

// Register FAKE_SENSOR_TS_MODE_0  // ISDB-T mode selection register
#define FAKE_SENSOR_TS_MODE_0                   _MK_ADDR_CONST(0x53000184)
#define FAKE_SENSOR_TS_MODE_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_TS_MODE_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_READ_MASK                         _MK_MASK_CONST(0xf)
#define FAKE_SENSOR_TS_MODE_0_WRITE_MASK                        _MK_MASK_CONST(0xf)
// This field indicates the global enable for ISDB-T protocol handling
#define FAKE_SENSOR_TS_MODE_0_ENABLE_SHIFT                      _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_TS_MODE_0_ENABLE_FIELD                      (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_MODE_0_ENABLE_SHIFT)
#define FAKE_SENSOR_TS_MODE_0_ENABLE_RANGE                      0:0
#define FAKE_SENSOR_TS_MODE_0_ENABLE_WOFFSET                    0x0
#define FAKE_SENSOR_TS_MODE_0_ENABLE_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_ENABLE_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_ENABLE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_ENABLE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_ENABLE_DISABLED                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_MODE_0_ENABLE_ENABLED                    _MK_ENUM_CONST(1)

// This field determines if input data is in serial or parallel format
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_SHIFT                  _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_FIELD                  (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_MODE_0_INPUT_MODE_SHIFT)
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_RANGE                  1:1
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_WOFFSET                        0x0
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_PARALLEL                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_MODE_0_INPUT_MODE_SERIAL                 _MK_ENUM_CONST(1)

// This field selected the pin configuration used for VD[1]  NONE:     TS_ERROR is tied to 0
//            TS_PSYNC is tied to 0     
//  TS_ERROR: TS_ERROR is on VD[1]
//            TS_PSYNC is tied to 0
//  TS_PSYNC: TS_ERROR is tied to 0
//            TS_PSYNC is on VD[1]
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_SHIFT                     _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_FIELD                     (_MK_MASK_CONST(0x3) << FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_SHIFT)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_RANGE                     3:2
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_WOFFSET                   0x0
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_NONE                      _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_TS_ERROR                  _MK_ENUM_CONST(1)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_TS_PSYNC                  _MK_ENUM_CONST(2)
#define FAKE_SENSOR_TS_MODE_0_PROTOCOL_SELECT_RESERVED                  _MK_ENUM_CONST(3)


// Register FAKE_SENSOR_TS_CONTROL_0  // ISDB-T mode control register
#define FAKE_SENSOR_TS_CONTROL_0                        _MK_ADDR_CONST(0x53000188)
#define FAKE_SENSOR_TS_CONTROL_0_WORD_COUNT                     0x1
#define FAKE_SENSOR_TS_CONTROL_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_READ_MASK                      _MK_MASK_CONST(0x7fff00ff)
#define FAKE_SENSOR_TS_CONTROL_0_WRITE_MASK                     _MK_MASK_CONST(0x7fff00ff)
// This field indicates the polarity of TS_VALID. Only has affect when TS_MODE.ENABLE == ENABLED    LOW indicates that the polarity of TS_VALID is active low. 
//    HIGH indicates that the polarity of TS_VALID is active high.
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_SHIFT                   _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_RANGE                   0:0
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_WOFFSET                 0x0
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_HIGH                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_VALID_POLARITY_LOW                     _MK_ENUM_CONST(1)

#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_SHIFT                   _MK_SHIFT_CONST(1)
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_RANGE                   1:1
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_WOFFSET                 0x0
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_HIGH                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_PSYNC_POLARITY_LOW                     _MK_ENUM_CONST(1)

#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_SHIFT                   _MK_SHIFT_CONST(2)
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_RANGE                   2:2
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_WOFFSET                 0x0
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_HIGH                    _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_ERROR_POLARITY_LOW                     _MK_ENUM_CONST(1)

#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_SHIFT                     _MK_SHIFT_CONST(3)
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_FIELD                     (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_RANGE                     3:3
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_WOFFSET                   0x0
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_HIGH                      _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_CLK_POLARITY_LOW                       _MK_ENUM_CONST(1)

// This field defines how the START of packet condition is determined  PSYNC: PSYNC assertion rising edge
//  VALID: VALID assertion rising edge
//  BOTH:  PSYNC && VALID asserted rising edge
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_SHIFT                     _MK_SHIFT_CONST(4)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_FIELD                     (_MK_MASK_CONST(0x3) << FAKE_SENSOR_TS_CONTROL_0_START_SELECT_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_RANGE                     5:4
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_WOFFSET                   0x0
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_RESERVED                  _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_PSYNC                     _MK_ENUM_CONST(1)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_VALID                     _MK_ENUM_CONST(2)
#define FAKE_SENSOR_TS_CONTROL_0_START_SELECT_BOTH                      _MK_ENUM_CONST(3)

// This field determines if VALID is used during BODY packet capture  IGNORE: the VALID signal is ignored during the capture
//  GATE: the VALID signal gates the capture of BODY data.
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_SHIFT                        _MK_SHIFT_CONST(6)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_FIELD                        (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_RANGE                        6:6
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_WOFFSET                      0x0
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_IGNORE                       _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_VALID_SELECT_GATE                 _MK_ENUM_CONST(1)

// This field determines is VI should store packets to memory that have been flagged as UPSTREAM_ERROR packets.
//  DISCARD: Do not store packets in memory
//  STORE:   Store UPSTREAM_ERROR packets in memory
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_SHIFT                        _MK_SHIFT_CONST(7)
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_FIELD                        (_MK_MASK_CONST(0x1) << FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_RANGE                        7:7
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_WOFFSET                      0x0
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_DISCARD                      _MK_ENUM_CONST(0)
#define FAKE_SENSOR_TS_CONTROL_0_STORE_UPSTREAM_ERROR_PKTS_STORE                        _MK_ENUM_CONST(1)

// This field stores the number of BODY bytes to capture (including PSYNC)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_SHIFT                        _MK_SHIFT_CONST(16)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_FIELD                        (_MK_MASK_CONST(0xff) << FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_RANGE                        23:16
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_WOFFSET                      0x0
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_BODY_SIZE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// This field stores the number of FEC bytes to catpure (after the BODY has been captured)
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_SHIFT                 _MK_SHIFT_CONST(24)
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_FIELD                 (_MK_MASK_CONST(0x7f) << FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_SHIFT)
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_RANGE                 30:24
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_WOFFSET                       0x0
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_CONTROL_0_FEC_SIZE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_TS_TEST_MODE_0  // sensor only register for ISDB-T error condition checking
#define FAKE_SENSOR_TS_TEST_MODE_0                      _MK_ADDR_CONST(0x5300018c)
#define FAKE_SENSOR_TS_TEST_MODE_0_WORD_COUNT                   0x1
#define FAKE_SENSOR_TS_TEST_MODE_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_READ_MASK                    _MK_MASK_CONST(0x7)
#define FAKE_SENSOR_TS_TEST_MODE_0_WRITE_MASK                   _MK_MASK_CONST(0x7)
//  5 possible states    SPACE - toggle number of idle cycles between packets (0 to n)
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_SHIFT                        _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_FIELD                        (_MK_MASK_CONST(0x7) << FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_SHIFT)
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_RANGE                        2:0
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_WOFFSET                      0x0
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_NONE                 _MK_ENUM_CONST(0)    // //    NONE - default case.  no error injection

#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_UPSTREAM                     _MK_ENUM_CONST(1)    // //    UPSTREAM - toggle the ts_error bit 

#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_UNDERRUN_EARLY_BODY_START                    _MK_ENUM_CONST(2)    // //    UNDERRUN - generate new START earlier than expected in BODY

#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_UNDERRUN_EARLY_FEC_START                     _MK_ENUM_CONST(3)    // //             - generate new START earlier than expected in FEC

#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_UNDERRUN_SHORT_BODY_VALID                    _MK_ENUM_CONST(4)    // //             - using BODY_VALID_SELECT=1 and VALID de-asserts earlier than expected

#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_OVERRUN_LONG_BODY_VALID                      _MK_ENUM_CONST(5)    // //    OVERRUN  - using BODY_VAILD_SELECT=1 and VALID asserts for longer than expected

#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_OTHER_PACKET_LENGTH_CORRECT                  _MK_ENUM_CONST(6)    // //    OTHER - captures correct number of bytes for packet, but body is too short. START comes early during FEC

#define FAKE_SENSOR_TS_TEST_MODE_0_ERROR_CONDITION_SPACE_BETWEEN_PACKETS                        _MK_ENUM_CONST(7)


// Register FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0  // set ram pointer for camera-A VC0
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0                  _MK_ADDR_CONST(0x53000190)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// if programmed to non-zero value the ram will be read till this byte location and the ram rd pointer returns to zero after this, otherwise the ram will be read till its end i.e last location of the ram. Programmed value = bytelocation-1. For 32 bytes/image, (32-1 = 31) need to be programmed
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_FIELD                       (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_RANGE                       31:0
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_DEFAULT_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0_WINA_VC0_RAM_POINTER_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0  // set ram pointer for camera-A VC1
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0                  _MK_ADDR_CONST(0x53000194)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// if programmed to non-zero value the ram will be read till this byte location (n-1) and the ram rd pointer returns to zero after this, otherwise the ram will be read till its end i.e last location of the ram
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_FIELD                       (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_SHIFT)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_RANGE                       31:0
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_DEFAULT_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0_WINA_VC1_RAM_POINTER_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0  // set ram pointer for camera-B VC0
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0                  _MK_ADDR_CONST(0x53000198)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// if programmed to non-zero value the ram will be read till this byte location (n-1) and the ram rd pointer returns to zero after this, otherwise the ram will be read till its end i.e last location of the ram
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_FIELD                       (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_RANGE                       31:0
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_DEFAULT_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0_WINB_VC0_RAM_POINTER_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0  // set ram pointer for camera-B VC1
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0                  _MK_ADDR_CONST(0x5300019c)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WORD_COUNT                       0x1
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_RESET_MASK                       _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
// if programmed to non-zero value the ram will be read till this byte location and the ram rd pointer returns to zero after this, otherwise the ram will be read till its end i.e last location of the ram
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_SHIFT                       _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_FIELD                       (_MK_MASK_CONST(0xffffffff) << FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_SHIFT)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_RANGE                       31:0
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_WOFFSET                     0x0
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_DEFAULT_MASK                        _MK_MASK_CONST(0xffffffff)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0_WINB_VC1_RAM_POINTER_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// *********************
// Add new register here
// *********************
// Always align icif_device address to 0x800

// Register FAKE_SENSOR_ICIF_DEVICE_0  
#define FAKE_SENSOR_ICIF_DEVICE_0                       _MK_ADDR_CONST(0x53000800)
#define FAKE_SENSOR_ICIF_DEVICE_0_WORD_COUNT                    0x1
#define FAKE_SENSOR_ICIF_DEVICE_0_RESET_VAL                     _MK_MASK_CONST(0x122)
#define FAKE_SENSOR_ICIF_DEVICE_0_RESET_MASK                    _MK_MASK_CONST(0x7ff)
#define FAKE_SENSOR_ICIF_DEVICE_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_READ_MASK                     _MK_MASK_CONST(0x7ff)
#define FAKE_SENSOR_ICIF_DEVICE_0_WRITE_MASK                    _MK_MASK_CONST(0x7ff)
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_FIELD                  (_MK_MASK_CONST(0xff) << FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_SHIFT)
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_RANGE                  7:0
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_WOFFSET                        0x0
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_DEFAULT                        _MK_MASK_CONST(0x22)
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_DEVICE_ADDRESS_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_SHIFT                 _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_SHIFT)
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_RANGE                 8:8
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_WOFFSET                       0x0
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_DEFAULT                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_OFF                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ICIF_DEVICE_0_SUBADDRESS_MODE_ON                    _MK_ENUM_CONST(1)

#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_SHIFT                    _MK_SHIFT_CONST(9)
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_FIELD                    (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_SHIFT)
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_RANGE                    9:9
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_WOFFSET                  0x0
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE__7_BIT                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ICIF_DEVICE_0_ADDRESS_MODE__10_BIT                  _MK_ENUM_CONST(1)

#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_SHIFT                   _MK_SHIFT_CONST(10)
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_SHIFT)
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_RANGE                   10:10
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_WOFFSET                 0x0
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_OFF                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_ICIF_DEVICE_0_GENERAL_CALL_RESPONSE_ON                      _MK_ENUM_CONST(1)


// Register FAKE_SENSOR_CSI_ICIF_DEVICE_0  
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0                   _MK_ADDR_CONST(0x53000804)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_WORD_COUNT                        0x1
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_RESET_VAL                         _MK_MASK_CONST(0x142)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_RESET_MASK                        _MK_MASK_CONST(0x7ff)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_READ_MASK                         _MK_MASK_CONST(0x7ff)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_WRITE_MASK                        _MK_MASK_CONST(0x7ff)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_SHIFT                  _MK_SHIFT_CONST(0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_FIELD                  (_MK_MASK_CONST(0xff) << FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_SHIFT)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_RANGE                  7:0
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_WOFFSET                        0x0
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_DEFAULT                        _MK_MASK_CONST(0x42)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_DEVICE_ADDRESS_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_SHIFT                 _MK_SHIFT_CONST(8)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_FIELD                 (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_SHIFT)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_RANGE                 8:8
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_WOFFSET                       0x0
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_DEFAULT                       _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_OFF                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_SUBADDRESS_MODE_ON                    _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_SHIFT                    _MK_SHIFT_CONST(9)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_FIELD                    (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_SHIFT)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_RANGE                    9:9
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_WOFFSET                  0x0
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_DEFAULT                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE__7_BIT                   _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_ADDRESS_MODE__10_BIT                  _MK_ENUM_CONST(1)

#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_SHIFT                   _MK_SHIFT_CONST(10)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_FIELD                   (_MK_MASK_CONST(0x1) << FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_SHIFT)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_RANGE                   10:10
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_WOFFSET                 0x0
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_DEFAULT                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_OFF                     _MK_ENUM_CONST(0)
#define FAKE_SENSOR_CSI_ICIF_DEVICE_0_CSI_GENERAL_CALL_RESPONSE_ON                      _MK_ENUM_CONST(1)


//
// REGISTER LIST
//
#define LIST_ARSENSOR_REGS(_op_) \
_op_(FAKE_SENSOR_ENABLE_0) \
_op_(FAKE_SENSOR_VSYNC_PULSE_0) \
_op_(FAKE_SENSOR_HSYNC_PULSE_0) \
_op_(FAKE_SENSOR_LINE_STRIDE_0) \
_op_(FAKE_SENSOR_FRAME_STRIDE_0) \
_op_(FAKE_SENSOR_DATAOUT_LINE_START_0) \
_op_(FAKE_SENSOR_DATAOUT_FRAME_START_0) \
_op_(FAKE_SENSOR_DATAOUT_LINE_WIDTH_0) \
_op_(FAKE_SENSOR_DATAOUT_FRAME_HEIGHT_0) \
_op_(FAKE_SENSOR_IMAGE_LINE_0) \
_op_(FAKE_SENSOR_IMAGE_FRAME_0) \
_op_(FAKE_SENSOR_DATA_SOURCE_0) \
_op_(FAKE_SENSOR_DATA_FORMAT_0) \
_op_(FAKE_SENSOR_DATA_IN_0) \
_op_(FAKE_SENSOR_CLK_EDGE_0) \
_op_(FAKE_SENSOR_HBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_VBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_SENSOR_MODE_0) \
_op_(FAKE_SENSOR_GPIO_MODE_0) \
_op_(FAKE_SENSOR_DATA_AUTO_GEN_0) \
_op_(FAKE_SENSOR_HDATA_DELAY_0) \
_op_(FAKE_SENSOR_HSYNC_CTRL_0) \
_op_(FAKE_SENSOR_ACTIVE_LEVEL_0) \
_op_(FAKE_SENSOR_JPG_DATA_0) \
_op_(FAKE_SENSOR_TPG_PATTERN_0) \
_op_(FAKE_SENSOR_ENABLE_CSI_0) \
_op_(FAKE_SENSOR_CSI_ACTIVE_WIN_0) \
_op_(FAKE_SENSOR_CSI_SP_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_WINA_EMBEDDED_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_WINB_EMBEDDED_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_SP_WINA_EMBEDDED_SIZE_0) \
_op_(FAKE_SENSOR_CSI_SP_WINB_EMBEDDED_SIZE_0) \
_op_(FAKE_SENSOR_CSI_SP_WINA_BLANK_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_SP_WINB_BLANK_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_WINA_VALID_VC_0) \
_op_(FAKE_SENSOR_CSI_WINB_VALID_VC_0) \
_op_(FAKE_SENSOR_CSI_WINA_NUMLANES_0) \
_op_(FAKE_SENSOR_CSI_WINA_PSPACE_0) \
_op_(FAKE_SENSOR_CSI_WINB_PSPACE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_LINE_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_FRAME_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_NUMFRAMES_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_DATA_FORMAT_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_HBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_VBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_LINE_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_FRAME_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_NUMFRAMES_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_DATA_FORMAT_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_HBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_VBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_DD_LINE_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_DD_FRAME_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_DD_DATA_FORMAT_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_DD_HBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_DD_VBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_LINE_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_FRAME_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_NUMFRAMES_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_DATA_FORMAT_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_HBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_VBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_LINE_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_FRAME_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_NUMFRAMES_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_DATA_FORMAT_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_HBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_VBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_DD_LINE_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_DD_FRAME_STRIDE_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_DD_DATA_FORMAT_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_DD_HBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_DD_VBLANK_PERIOD_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_DATA_AUTO_GEN_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0DD_DATA_AUTO_GEN_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_DATA_AUTO_GEN_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_DATA_AUTO_GEN_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0DD_DATA_AUTO_GEN_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_DATA_AUTO_GEN_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_LONGPACKET_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_LONGPACKET_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_LONGPACKET_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_LONGPACKET_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_CILA_TIMING_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_CILB_TIMING_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_CIL_TIMING_PARAM0_0) \
_op_(FAKE_SENSOR_CSI_CIL_TIMING_PARAM1_0) \
_op_(FAKE_SENSOR_CSI_CIL_TIMING_PARAM2_0) \
_op_(FAKE_SENSOR_CSI_CILA_ESC_MODE_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_CILB_ESC_MODE_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_CILA_ERROR_INSERTION_0) \
_op_(FAKE_SENSOR_CSI_CILB_ERROR_INSERTION_0) \
_op_(FAKE_SENSOR_CSI_CIL_SERIAL_CLOCK_DIVIDER_0) \
_op_(FAKE_SENSOR_BAYER_VSYNC_HSYNC_COINCIDE_0) \
_op_(FAKE_SENSOR_CSI_DEBUG_DATA_CONTROL_0) \
_op_(FAKE_SENSOR_CSI_CILA_COMMAND_0) \
_op_(FAKE_SENSOR_CSI_CILB_COMMAND_0) \
_op_(FAKE_SENSOR_TS_MODE_0) \
_op_(FAKE_SENSOR_TS_CONTROL_0) \
_op_(FAKE_SENSOR_TS_TEST_MODE_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC0_RAM_POINTER_0) \
_op_(FAKE_SENSOR_CSI_WINA_VC1_RAM_POINTER_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC0_RAM_POINTER_0) \
_op_(FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0) \
_op_(FAKE_SENSOR_ICIF_DEVICE_0) \
_op_(FAKE_SENSOR_CSI_ICIF_DEVICE_0)


//
// ADDRESS SPACES
//

#define BASE_ADDRESS_FAKE_SENSOR        0x53000000

//
// ARSENSOR REGISTER BANKS
//

#define FAKE_SENSOR0_FIRST_REG 0x53000000 // FAKE_SENSOR_ENABLE_0
#define FAKE_SENSOR0_LAST_REG 0x5300019c // FAKE_SENSOR_CSI_WINB_VC1_RAM_POINTER_0
#define FAKE_SENSOR1_FIRST_REG 0x53000800 // FAKE_SENSOR_ICIF_DEVICE_0
#define FAKE_SENSOR1_LAST_REG 0x53000804 // FAKE_SENSOR_CSI_ICIF_DEVICE_0

#ifndef _MK_SHIFT_CONST
  #define _MK_SHIFT_CONST(_constant_) _constant_
#endif
#ifndef _MK_MASK_CONST
  #define _MK_MASK_CONST(_constant_) _constant_
#endif
#ifndef _MK_ENUM_CONST
  #define _MK_ENUM_CONST(_constant_) (_constant_ ## UL)
#endif
#ifndef _MK_ADDR_CONST
  #define _MK_ADDR_CONST(_constant_) _constant_
#endif

#endif // ifndef ___ARSENSOR_H_INC_
