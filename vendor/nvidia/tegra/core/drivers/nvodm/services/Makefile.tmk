################################### tell Emacs this is a -*- makefile-gmake -*-
#
# Copyright (c) 2011-2012, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.
#
# tmake for SW Mobile component makefile
#
# nvodm_services static library component makefile
#
###############################################################################

ifdef NV_COMPONENT_FLAG_STATIC_LIBRARY_SECTION
include $(NV_BUILD_START_COMPONENT)

NV_COMPONENT_NAME              := libnvodm_services
NV_COMPONENT_OWN_INTERFACE_DIR := .
ifeq ($(NV_TARGET_BOOTLOADER_PINMUX),kernel)
NV_COMPONENT_CFLAGS += -DSET_KERNEL_PINMUX
endif

NV_COMPONENT_SOURCES           := \
	nvodm_services_os.c \
	nvodm_services_os_common.c

ifdef NV_BUILD_CONFIGURATION_IS_MICROBOOT
NV_COMPONENT_HAS_BROKEN_CODE   := return-type
NV_COMPONENT_INCLUDES          := \
	../../hwinc
ifeq ($(NV_TARGET_SOC),ap20)
NV_COMPONENT_SOURCES           += \
	avp/nvodm_services_avp.c
NV_COMPONENT_INCLUDES          += \
	../../nvboot/ap20/include
else
NV_COMPONENT_SOURCES           += \
	avp/nvodm_services_avp_spi_$(NV_TARGET_SOC).c \
	avp/nvodm_services_avp_i2c_$(NV_TARGET_SOC).c \
	avp/nvodm_services_avp_gpio_$(NV_TARGET_SOC).c \
	avp/nvodm_services_avp_pmu_$(NV_TARGET_SOC).c \
	avp/nvodm_services_avp_misc_$(NV_TARGET_SOC).c
endif
else
NV_COMPONENT_SOURCES           += \
	nvodm_services.c \
	nvodm_services_common.c \
	nvodm_services_ext.c
endif

ifeq ($(NV_TARGET_REFERENCE_BOARD),cardhu)
NV_COMPONENT_CFLAGS += -DSKU_FUSEREAD=1
else
NV_COMPONENT_CFLAGS += -DSKU_FUSEREAD=0
endif

#
# NOTE: The code from these modules is also executed on the AVP!
#       Therefore they need to be compiled with code generation flags
#       compatible with AVP, i.e. ARMv4T ARM code.
#
NV_COMPONENT_CODE_GENERATION   := avp

include $(NV_BUILD_STATIC_LIBRARY)
endif

# Local Variables:
# indent-tabs-mode: t
# tab-width: 8
# End:
# vi: set tabstop=8 noexpandtab:
