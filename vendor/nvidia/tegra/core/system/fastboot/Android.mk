#
# Copyright (c) 2012, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.
#

ifeq ($(BOARD_BUILD_BOOTLOADER),true)
LOCAL_PATH := $(call my-dir)
include $(NVIDIA_DEFAULTS)
LOCAL_NVIDIA_NULL_COVERAGE := true

LOCAL_MODULE := bootloader
# place bootloader at root of output hierarchy
LOCAL_MODULE_PATH := $(PRODUCT_OUT)

LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/system/nv3p
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/system/nv3pserver
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/system/nvbootupdate
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/drivers/nvddk/disp
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/drivers/nvrm/nvrmkernel/core/common
LOCAL_C_INCLUDES += -I$(TEGRA_TOP)/core/drivers/hwinc
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/system/nvaboot
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/utils/nvos/aos
LOCAL_C_INCLUDES += $(TEGRA_TOP)/core/system/fastboot/libfdt

ifneq ($(filter  ap20,$(TARGET_TEGRA_VERSION)),)
LOCAL_CFLAGS += -DNV_AOS_ENTRY_POINT=0x00108000
LOCAL_CFLAGS += -DNV_AOS_LOAD_ADDRESS=0x00108000
else
LOCAL_CFLAGS += -DNV_AOS_ENTRY_POINT=0x80108000
LOCAL_CFLAGS += -DNV_AOS_LOAD_ADDRESS=0x80108000
endif

LOCAL_SRC_FILES += libfdt/fdt.c
LOCAL_SRC_FILES += libfdt/fdt_ro.c
LOCAL_SRC_FILES += libfdt/fdt_rw.c
LOCAL_SRC_FILES += libfdt/fdt_strerror.c
LOCAL_SRC_FILES += libfdt/fdt_sw.c
LOCAL_SRC_FILES += libfdt/fdt_wip.c

ifeq ($(KEENHI_BOOTLOADER_USE_VOLUME_UP_AS_ENTER),true)
LOCAL_CFLAGS += -DKEENHI_BOOTLOADER_USE_VOLUME_UP_AS_ENTER
endif

LOCAL_SRC_FILES += main.c
LOCAL_SRC_FILES += prettyprint.c
LOCAL_SRC_FILES += gui.c
LOCAL_SRC_FILES += linux_cmdline.c
LOCAL_SRC_FILES += usb.c
LOCAL_SRC_FILES += jingle.c
LOCAL_SRC_FILES += recovery_utils.c

LOCAL_CFLAGS += -std=c9x

LOCAL_STATIC_LIBRARIES += libnvaboot
LOCAL_STATIC_LIBRARIES += libnv3pserver
LOCAL_STATIC_LIBRARIES += libnv3p
LOCAL_STATIC_LIBRARIES += libnvpartmgr
LOCAL_STATIC_LIBRARIES += libnvstormgr
LOCAL_STATIC_LIBRARIES += libnvbootupdate
LOCAL_STATIC_LIBRARIES += libnvcrypto
LOCAL_STATIC_LIBRARIES += libnvsystem_utils
LOCAL_STATIC_LIBRARIES += libnvfsmgr
LOCAL_STATIC_LIBRARIES += libnvfs
LOCAL_STATIC_LIBRARIES += libnvddk_aes
LOCAL_STATIC_LIBRARIES += libnvddk_blockdevmgr
LOCAL_STATIC_LIBRARIES += libnvddk_disp
LOCAL_STATIC_LIBRARIES += libnvddk_i2s
LOCAL_STATIC_LIBRARIES += libnvddk_kbc
LOCAL_STATIC_LIBRARIES += libnvddk_nand
LOCAL_STATIC_LIBRARIES += libnvddk_sdio
LOCAL_STATIC_LIBRARIES += libnvddk_snor
ifneq ($(TARGET_TEGRA_VERSION),ap20)
LOCAL_STATIC_LIBRARIES += libnvddk_se
endif
LOCAL_STATIC_LIBRARIES += libnvddk_spif
LOCAL_STATIC_LIBRARIES += libnvrm_impl
LOCAL_STATIC_LIBRARIES += libnvrm_channel_impl
LOCAL_STATIC_LIBRARIES += libnvodm_scrollwheel
LOCAL_STATIC_LIBRARIES += libnvodm_keyboard
ifeq ($(filter $(TARGET_BOARD_PLATFORM_TYPE),fpga simulation),)
ifneq ($(TARGET_PRODUCT),p1852)
LOCAL_CFLAGS += -DLPM_BATTERY_CHARGING=1
LOCAL_STATIC_LIBRARIES += libnvodm_charging
endif
ifeq ($(NV_EMBEDDED_BUILD),1)
LOCAL_STATIC_LIBRARIES += libnvsku
LOCAL_STATIC_LIBRARIES += libnvodm_avp
endif
endif
LOCAL_STATIC_LIBRARIES += libnvodm_fuelgaugefwupgrade
LOCAL_STATIC_LIBRARIES += libnvodm_disp
LOCAL_STATIC_LIBRARIES += libnvodm_query_static_avp

LOCAL_STATIC_LIBRARIES += libnvodm_audiocodec
LOCAL_STATIC_LIBRARIES += libnvodm_tmon
LOCAL_STATIC_LIBRARIES += libnvodm_pmu
LOCAL_STATIC_LIBRARIES += libnvodm_misc_static
LOCAL_STATIC_LIBRARIES += libnvodm_gpio_ext
LOCAL_STATIC_LIBRARIES += libnvfxmath
LOCAL_STATIC_LIBRARIES += libnvextfsmgr
LOCAL_STATIC_LIBRARIES += libnvextfs
LOCAL_STATIC_LIBRARIES += libnvodm_services_os_avp
LOCAL_STATIC_LIBRARIES += libnvaes_keysched_lock
LOCAL_STATIC_LIBRARIES += libnvgpio_avp
LOCAL_STATIC_LIBRARIES += libnvos_aos
LOCAL_STATIC_LIBRARIES += libnvos_aos_avp
LOCAL_STATIC_LIBRARIES += libnvappmain_aos
LOCAL_STATIC_LIBRARIES += libnvbct
LOCAL_STATIC_LIBRARIES += libnvintr
LOCAL_STATIC_LIBRARIES += libnvodm_system_update
LOCAL_STATIC_LIBRARIES += libnvrsa
ifneq ($(filter t30,$(TARGET_TEGRA_VERSION)),)
LOCAL_STATIC_LIBRARIES += libnvseaes_keysched_lock_avp
endif
LOCAL_STATIC_LIBRARIES += libnvddk_fuse
LOCAL_STATIC_LIBRARIES += libnvdiagnostics

ifeq ($(NV_TARGET_BOOTLOADER_PINMUX),kernel)
LOCAL_STATIC_LIBRARIES += libnvpinmux_avp
endif

LOCAL_STATIC_LIBRARIES += libnvavpuart

LOCAL_MODULE_CLASS := EXECUTABLES
LOCAL_MODULE_SUFFIX := .bin
LOCAL_FORCE_STATIC_EXECUTABLE := true
#added by jimmy
LOCAL_CFLAGS += -DMAKE_SHOW_LOGO
ifneq ($(TARGET_DEVICE),n020)
LOCAL_CFLAGS += -DMAKE_POWER_KEY_2SE_DECT
endif

#added by wantianpei
ifneq ($(TARGET_DEVICE),n020)
LOCAL_CFLAGS += -DMAKE_LOW_BATTERY_DECT
endif
ifeq ($(TARGET_DEVICE),nabi2_3d)
LOCAL_CFLAGS += -DBQ24160_CHARGER
endif
ifeq ($(TARGET_DEVICE),nabi2_xd)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_NABIXD
endif

ifeq ($(TARGET_DEVICE),nabi_2s)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_NABI2S
LOCAL_CFLAGS += -DPIXEL_1280X800
endif

ifeq ($(TARGET_DEVICE),qc750)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DLOGO_QC750
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DMODULE_3G_CONF
endif

ifeq ($(TARGET_DEVICE),n710)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
ifeq ($(N710_NEUTRAL),true)
LOCAL_CFLAGS += -DLOGO_N710_NEUTRAL
else
LOCAL_CFLAGS += -DLOGO_N710
endif
LOCAL_CFLAGS += -DPIXEL_1280X800
endif

ifeq ($(TARGET_DEVICE),n711)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DLOGO_N711
endif

ifeq ($(TARGET_DEVICE),n712)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DLOGO_N712
endif

ifeq ($(TARGET_DEVICE),itq700)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_ITQ700
#LOCAL_CFLAGS += -DLOGO_HP
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DPRECHARGE_LOGO_ITQ700
endif

ifeq ($(TARGET_DEVICE),cybtt10_bk)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_CYBTT10_BK
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DPRECHARGE_LOGO_CYBTT10_BK
endif

ifeq ($(TARGET_DEVICE),mm3201)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_MM3201
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DPRECHARGE_LOGO_ITQ701

endif
ifeq ($(TARGET_DEVICE),itq701)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_ITQ701
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DPRECHARGE_LOGO_ITQ701

endif
ifeq ($(TARGET_DEVICE),n1010)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
ifeq ($(N1010_NEUTRAL),true)
LOCAL_CFLAGS += -DLOGO_N1010_NEUTRAL
else
LOCAL_CFLAGS += -DLOGO_N1010
endif
LOCAL_CFLAGS += -DPIXEL_1366X768
endif

ifeq ($(TARGET_DEVICE),n1020)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_N1020
LOCAL_CFLAGS += -DPIXEL_1280X800
endif

ifeq ($(TARGET_DEVICE),w1011a)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_W1011A
LOCAL_CFLAGS += -DPIXEL_1280X800
endif

ifeq ($(TARGET_DEVICE),n1050)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DMODULE_3G_CONF
ifeq ($(N1010_NEUTRAL),true)
LOCAL_CFLAGS += -DLOGO_N1010_NEUTRAL
else
LOCAL_CFLAGS += -DLOGO_N1050
endif
LOCAL_CFLAGS += -DPIXEL_1366X768
endif

ifeq ($(TARGET_DEVICE),n1011)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_N1011
LOCAL_CFLAGS += -DPIXEL_1366X768
endif

ifeq ($(TARGET_DEVICE),ns_14t004)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_NS_14T004
LOCAL_CFLAGS += -DPIXEL_1366X768
LOCAL_CFLAGS += -DPRECHARGE_LOGO_NS_14T004
LOCAL_CFLAGS += -DBBY_BACKLIGHT_CTRL_FLAG
endif

ifeq ($(TARGET_DEVICE),itq1000)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_ITQ1000
LOCAL_CFLAGS += -DPIXEL_1366X768
LOCAL_CFLAGS += -DPRECHARGE_LOGO_ITQ1000
endif

ifeq ($(TARGET_DEVICE),birch)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_N750_HP
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DMODULE_3G_CONF
LOCAL_CFLAGS += -DPRECHARGE_LOGO_HP
#LOCAL_CFLAGS += -DPRECHARGE_LOGO_ITQ700
endif
ifeq ($(TARGET_DEVICE),n750)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP

LOCAL_CFLAGS += -DLOGO_N750_HP
#ifeq ($(N750_NEUTRAL),true)
#LOCAL_CFLAGS += -DLOGO_N750_NEUTRAL
#else 
#LOCAL_CFLAGS += -DLOGO_N750
#endif
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DMODULE_3G_CONF
LOCAL_CFLAGS += -DPRECHARGE_LOGO_HP
endif

ifeq ($(TARGET_DEVICE),wikipad)
LOCAL_CFLAGS += -DBQ24160_CHARGER
LOCAL_CFLAGS += -DBQ24160_CHARGER_Param
LOCAL_CFLAGS += -DMAKE_AC_BOOT_UP
LOCAL_CFLAGS += -DLOGO_WIKIPAD
LOCAL_CFLAGS += -DPIXEL_1280X800
LOCAL_CFLAGS += -DWIKIPAD_LOW_POWER
LOCAL_CFLAGS += -DWIKIPAD_BACKLIGHT_CTRL_FLAG
endif

ifeq ($(TARGET_DEVICE),n020)
LOCAL_CFLAGS += -DLEDS_TLC59116_DRIVER
endif

include $(NVIDIA_BASE)
include $(NVIDIA_COVERAGE)
include $(BUILD_SYSTEM)/binary.mk

ifneq ($(filter ap20,$(TARGET_TEGRA_VERSION)),)
LOCAL_LINK_SCRIPT := $(TEGRA_TOP)/core/utils/nvos/aos/nvap/ap15_cpu.x
else
LOCAL_LINK_SCRIPT := $(TEGRA_TOP)/core/utils/nvos/aos/nvap/t30_cpu.x
endif

MAP_FILE := $(call local-intermediates-dir)/$(LOCAL_MODULE).map

$(LOCAL_BUILT_MODULE) : PRIVATE_ELF_FILE := $(intermediates)/$(PRIVATE_MODULE).elf
$(LOCAL_BUILT_MODULE) : PRIVATE_LINK_SCRIPT := $(LOCAL_LINK_SCRIPT)
$(LOCAL_BUILT_MODULE) : PRIVATE_RAW_EXECUTABLE_LDFLAGS = -static --entry=_start --gc-sections -Map $(MAP_FILE)

LOCAL_PUBLIC_KEY_FILE := $(TARGET_OUT_HEADERS)/publickey.h
PRIVATE_KEY_FILE_PATH := $(TOP)/device/nvidia/common/security/signkey.pk8

#The following lines generate the publickey.h file based on signkey.pk8
$(LOCAL_PUBLIC_KEY_FILE) : $(PRIVATE_KEY_FILE_PATH) $(HOST_OUT_EXECUTABLES)/nvdumppublickey
	$(HOST_OUT_EXECUTABLES)/nvdumppublickey $(PRIVATE_KEY_FILE_PATH) $(LOCAL_PUBLIC_KEY_FILE)

$(all_objects) : $(LOCAL_PUBLIC_KEY_FILE)

$(LOCAL_BUILT_MODULE): $(all_objects) $(all_libraries) $(LOCAL_LINK_SCRIPT)
	@$(mkdir -p $(dir $@)
	@echo "target Linking: $(PRIVATE_MODULE)"
	$(hide) $(TARGET_LD) \
		$(addprefix --script ,$(PRIVATE_LINK_SCRIPT)) \
		$(PRIVATE_RAW_EXECUTABLE_LDFLAGS) \
		-o $(PRIVATE_ELF_FILE) \
		$(PRIVATE_ALL_OBJECTS) \
		--start-group $(PRIVATE_ALL_STATIC_LIBRARIES) --end-group
	$(hide) $(TARGET_OBJCOPY) -O binary $(PRIVATE_ELF_FILE) $@
endif
